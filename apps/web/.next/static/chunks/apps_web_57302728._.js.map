{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/lib/hooks/useDeStock.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract, useWaitForTransactionReceipt } from 'wagmi';\r\nimport { DESTOCK_ABI, getContractAddress } from '../contracts';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { Address, parseEther, formatEther } from 'viem';\r\n\r\nexport function useDeStock() {\r\n  const { address, chainId } = useAccount();\r\n  \r\n  const contractAddress = useMemo(() => {\r\n    if (!chainId) return undefined;\r\n    return getContractAddress('DESTOCK', chainId);\r\n  }, [chainId]);\r\n\r\n  const { writeContract, data: hash, error, isPending } = useWriteContract();\r\n  const { isLoading: isConfirming, isSuccess: isConfirmed } = useWaitForTransactionReceipt({\r\n    hash,\r\n  });\r\n\r\n  // Read functions\r\n  const { data: nextCompanyId } = useReadContract({\r\n    address: contractAddress,\r\n    abi: DESTOCK_ABI,\r\n    functionName: 'nextCompanyId',\r\n  });\r\n\r\n  const getCompany = useCallback((companyId: number) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'companies',\r\n      args: [BigInt(companyId)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getSharePrice = useCallback((companyId: number) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getSharePrice',\r\n      args: [BigInt(companyId)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getShareBalance = useCallback((companyId: number, userAddress?: Address) => {\r\n    const targetAddress = userAddress || address;\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'balanceOf',\r\n      args: targetAddress ? [targetAddress, BigInt(companyId)] : undefined,\r\n      query: {\r\n        enabled: !!targetAddress,\r\n      },\r\n    });\r\n  }, [contractAddress, address]);\r\n\r\n  const getLPTokenBalance = useCallback((companyId: number, userAddress?: Address) => {\r\n    const targetAddress = userAddress || address;\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getLPTokenBalance',\r\n      args: targetAddress ? [targetAddress, BigInt(companyId)] : undefined,\r\n      query: {\r\n        enabled: !!targetAddress,\r\n      },\r\n    });\r\n  }, [contractAddress, address]);\r\n\r\n  const getUserOrders = useCallback((userAddress?: Address) => {\r\n    const targetAddress = userAddress || address;\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getUserOrders',\r\n      args: targetAddress ? [targetAddress] : undefined,\r\n      query: {\r\n        enabled: !!targetAddress,\r\n      },\r\n    });\r\n  }, [contractAddress, address]);\r\n\r\n  const getOrderDetails = useCallback((orderId: number) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getOrderDetails',\r\n      args: [BigInt(orderId)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getBuyPrice = useCallback((companyId: number, amount: string) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getBuyPrice',\r\n      args: [BigInt(companyId), BigInt(amount)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getSellPrice = useCallback((companyId: number, amount: string) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getSellPrice',\r\n      args: [BigInt(companyId), BigInt(amount)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getTradingVolume = useCallback((companyId: number) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getTradingVolume',\r\n      args: [BigInt(companyId)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  // Write functions\r\n  const registerCompany = useCallback(\r\n    (name: string, initialPrice: string, totalSupply: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'registerCompany',\r\n        args: [name, parseEther(initialPrice), BigInt(totalSupply)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const buyShares = useCallback(\r\n    (companyId: number, amount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'buyShares',\r\n        args: [BigInt(companyId), BigInt(amount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const sellShares = useCallback(\r\n    (companyId: number, amount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'sellShares',\r\n        args: [BigInt(companyId), BigInt(amount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const addLiquidity = useCallback(\r\n    (companyId: number, tokenAmount: string, shareAmount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'addLiquidity',\r\n        args: [BigInt(companyId), parseEther(tokenAmount), BigInt(shareAmount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const removeLiquidity = useCallback(\r\n    (companyId: number, lpTokens: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'removeLiquidity',\r\n        args: [BigInt(companyId), BigInt(lpTokens)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const placeOrder = useCallback(\r\n    (companyId: number, isBuy: boolean, amount: string, price: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'placeOrder',\r\n        args: [BigInt(companyId), isBuy, BigInt(amount), parseEther(price)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const cancelOrder = useCallback(\r\n    (orderId: number) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'cancelOrder',\r\n        args: [BigInt(orderId)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  return {\r\n    // Contract data\r\n    contractAddress,\r\n    nextCompanyId: nextCompanyId ? Number(nextCompanyId) : 0,\r\n    \r\n    // Read functions\r\n    getCompany,\r\n    getSharePrice,\r\n    getShareBalance,\r\n    getLPTokenBalance,\r\n    getUserOrders,\r\n    getOrderDetails,\r\n    getBuyPrice,\r\n    getSellPrice,\r\n    getTradingVolume,\r\n    \r\n    // Write functions\r\n    registerCompany,\r\n    buyShares,\r\n    sellShares,\r\n    addLiquidity,\r\n    removeLiquidity,\r\n    placeOrder,\r\n    cancelOrder,\r\n    \r\n    // Transaction state\r\n    hash,\r\n    isPending,\r\n    isConfirming,\r\n    isConfirmed,\r\n    error,\r\n  };\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/components/AnimatedCounter.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { motion, useSpring, useTransform } from 'framer-motion';\r\n\r\ninterface AnimatedCounterProps {\r\n  value: number;\r\n  format?: 'currency' | 'percentage' | 'decimal' | 'integer';\r\n  decimals?: number;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  duration?: number;\r\n  className?: string;\r\n  colorChange?: boolean;\r\n  previousValue?: number;\r\n}\r\n\r\nexport function AnimatedCounter({\r\n  value,\r\n  format = 'decimal',\r\n  decimals = 2,\r\n  prefix = '',\r\n  suffix = '',\r\n  duration = 0.5,\r\n  className = '',\r\n  colorChange = false,\r\n  previousValue,\r\n}: AnimatedCounterProps) {\r\n  const [displayValue, setDisplayValue] = useState(value);\r\n  const [isChanging, setIsChanging] = useState(false);\r\n\r\n  const springValue = useSpring(value, {\r\n    stiffness: 100,\r\n    damping: 15,\r\n  });\r\n\r\n  const displayNumber = useTransform(springValue, (latest) => {\r\n    let formatted: string;\r\n    \r\n    switch (format) {\r\n      case 'currency':\r\n        formatted = new Intl.NumberFormat('en-US', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n          minimumFractionDigits: decimals,\r\n          maximumFractionDigits: decimals,\r\n        }).format(latest);\r\n        break;\r\n      case 'percentage':\r\n        formatted = `${latest.toFixed(decimals)}%`;\r\n        break;\r\n      case 'integer':\r\n        formatted = Math.round(latest).toLocaleString();\r\n        break;\r\n      case 'decimal':\r\n      default:\r\n        formatted = latest.toFixed(decimals);\r\n        break;\r\n    }\r\n\r\n    return `${prefix}${formatted}${suffix}`;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (value !== displayValue) {\r\n      setIsChanging(true);\r\n      springValue.set(value);\r\n      setDisplayValue(value);\r\n      \r\n      const timer = setTimeout(() => {\r\n        setIsChanging(false);\r\n      }, duration * 1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [value, displayValue, springValue, duration]);\r\n\r\n  const getChangeColor = () => {\r\n    if (!colorChange || previousValue === undefined) return '';\r\n    \r\n    if (value > previousValue) return 'text-success';\r\n    if (value < previousValue) return 'text-danger';\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <motion.span\r\n      className={`number-counter ${getChangeColor()} ${className}`}\r\n      animate={isChanging ? {\r\n        scale: [1, 1.05, 1],\r\n      } : {}}\r\n      transition={{\r\n        type: 'tween',\r\n        duration: 0.3,\r\n        ease: 'easeInOut'\r\n      }}\r\n      aria-live=\"polite\"\r\n    >\r\n      {displayNumber}\r\n    </motion.span>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;;;AAHA;;;AAiBO,SAAS,gBAAgB,EAC9B,KAAK,EACL,SAAS,SAAS,EAClB,WAAW,CAAC,EACZ,SAAS,EAAE,EACX,SAAS,EAAE,EACX,WAAW,GAAG,EACd,YAAY,EAAE,EACd,cAAc,KAAK,EACnB,aAAa,EACQ;;IACrB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,cAAc,CAAA,GAAA,4KAAA,CAAA,YAAS,AAAD,EAAE,OAAO;QACnC,WAAW;QACX,SAAS;IACX;IAEA,MAAM,gBAAgB,CAAA,GAAA,+KAAA,CAAA,eAAY,AAAD,EAAE;uDAAa,CAAC;YAC/C,IAAI;YAEJ,OAAQ;gBACN,KAAK;oBACH,YAAY,IAAI,KAAK,YAAY,CAAC,SAAS;wBACzC,OAAO;wBACP,UAAU;wBACV,uBAAuB;wBACvB,uBAAuB;oBACzB,GAAG,MAAM,CAAC;oBACV;gBACF,KAAK;oBACH,YAAY,GAAG,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC;oBAC1C;gBACF,KAAK;oBACH,YAAY,KAAK,KAAK,CAAC,QAAQ,cAAc;oBAC7C;gBACF,KAAK;gBACL;oBACE,YAAY,OAAO,OAAO,CAAC;oBAC3B;YACJ;YAEA,OAAO,GAAG,SAAS,YAAY,QAAQ;QACzC;;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,IAAI,UAAU,cAAc;gBAC1B,cAAc;gBACd,YAAY,GAAG,CAAC;gBAChB,gBAAgB;gBAEhB,MAAM,QAAQ;uDAAW;wBACvB,cAAc;oBAChB;sDAAG,WAAW;gBAEd;iDAAO,IAAM,aAAa;;YAC5B;QACF;oCAAG;QAAC;QAAO;QAAc;QAAa;KAAS;IAE/C,MAAM,iBAAiB;QACrB,IAAI,CAAC,eAAe,kBAAkB,WAAW,OAAO;QAExD,IAAI,QAAQ,eAAe,OAAO;QAClC,IAAI,QAAQ,eAAe,OAAO;QAClC,OAAO;IACT;IAEA,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;QACV,WAAW,CAAC,eAAe,EAAE,iBAAiB,CAAC,EAAE,WAAW;QAC5D,SAAS,aAAa;YACpB,OAAO;gBAAC;gBAAG;gBAAM;aAAE;QACrB,IAAI,CAAC;QACL,YAAY;YACV,MAAM;YACN,UAAU;YACV,MAAM;QACR;QACA,aAAU;kBAET;;;;;;AAGP;GApFgB;;QAcM,4KAAA,CAAA,YAAS;QAKP,+KAAA,CAAA,eAAY;;;KAnBpB","debugId":null}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/components/LoadingSpinner.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { clsx } from 'clsx';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'small' | 'medium' | 'large';\r\n  variant?: 'circular' | 'dots' | 'bars';\r\n  className?: string;\r\n  overlay?: boolean;\r\n}\r\n\r\nexport function LoadingSpinner({ \r\n  size = 'medium', \r\n  variant = 'circular', \r\n  className = '',\r\n  overlay = false \r\n}: LoadingSpinnerProps) {\r\n  const sizeClasses = {\r\n    small: 'w-4 h-4',\r\n    medium: 'w-8 h-8',\r\n    large: 'w-12 h-12',\r\n  };\r\n\r\n  if (variant === 'circular') {\r\n    return (\r\n      <div className={clsx(\r\n        'flex items-center justify-center',\r\n        overlay && 'fixed inset-0 glass-modal z-50',\r\n        className\r\n      )}>\r\n        <motion.div\r\n          className={clsx(\r\n            'border-2 border-destock-primary/20 border-t-destock-primary rounded-full',\r\n            sizeClasses[size]\r\n          )}\r\n          animate={{ rotate: 360 }}\r\n          transition={{\r\n            duration: 1,\r\n            repeat: Infinity,\r\n            ease: 'linear',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (variant === 'dots') {\r\n    return (\r\n      <div className={clsx(\r\n        'flex items-center justify-center space-x-1',\r\n        overlay && 'fixed inset-0 glass-modal z-50',\r\n        className\r\n      )}>\r\n        {[0, 1, 2].map((index) => (\r\n          <motion.div\r\n            key={index}\r\n            className=\"w-2 h-2 bg-destock-primary rounded-full\"\r\n            animate={{\r\n              scale: [1, 1.5, 1],\r\n              opacity: [0.5, 1, 0.5],\r\n            }}\r\n            transition={{\r\n              duration: 1,\r\n              repeat: Infinity,\r\n              delay: index * 0.2,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (variant === 'bars') {\r\n    return (\r\n      <div className={clsx(\r\n        'flex items-center justify-center space-x-1',\r\n        overlay && 'fixed inset-0 glass-modal z-50',\r\n        className\r\n      )}>\r\n        {[0, 1, 2, 3].map((index) => (\r\n          <motion.div\r\n            key={index}\r\n            className=\"w-1 bg-destock-primary rounded-full\"\r\n            style={{ height: size === 'small' ? 16 : size === 'medium' ? 24 : 32 }}\r\n            animate={{\r\n              scaleY: [1, 2, 1],\r\n            }}\r\n            transition={{\r\n              duration: 1,\r\n              repeat: Infinity,\r\n              delay: index * 0.1,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS,eAAe,EAC7B,OAAO,QAAQ,EACf,UAAU,UAAU,EACpB,YAAY,EAAE,EACd,UAAU,KAAK,EACK;IACpB,MAAM,cAAc;QAClB,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IAEA,IAAI,YAAY,YAAY;QAC1B,qBACE,6LAAC;YAAI,WAAW,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EACjB,oCACA,WAAW,kCACX;sBAEA,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,WAAW,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EACZ,4EACA,WAAW,CAAC,KAAK;gBAEnB,SAAS;oBAAE,QAAQ;gBAAI;gBACvB,YAAY;oBACV,UAAU;oBACV,QAAQ;oBACR,MAAM;gBACR;;;;;;;;;;;IAIR;IAEA,IAAI,YAAY,QAAQ;QACtB,qBACE,6LAAC;YAAI,WAAW,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EACjB,8CACA,WAAW,kCACX;sBAEC;gBAAC;gBAAG;gBAAG;aAAE,CAAC,GAAG,CAAC,CAAC,sBACd,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBAET,WAAU;oBACV,SAAS;wBACP,OAAO;4BAAC;4BAAG;4BAAK;yBAAE;wBAClB,SAAS;4BAAC;4BAAK;4BAAG;yBAAI;oBACxB;oBACA,YAAY;wBACV,UAAU;wBACV,QAAQ;wBACR,OAAO,QAAQ;oBACjB;mBAVK;;;;;;;;;;IAef;IAEA,IAAI,YAAY,QAAQ;QACtB,qBACE,6LAAC;YAAI,WAAW,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EACjB,8CACA,WAAW,kCACX;sBAEC;gBAAC;gBAAG;gBAAG;gBAAG;aAAE,CAAC,GAAG,CAAC,CAAC,sBACjB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBAET,WAAU;oBACV,OAAO;wBAAE,QAAQ,SAAS,UAAU,KAAK,SAAS,WAAW,KAAK;oBAAG;oBACrE,SAAS;wBACP,QAAQ;4BAAC;4BAAG;4BAAG;yBAAE;oBACnB;oBACA,YAAY;wBACV,UAAU;wBACV,QAAQ;wBACR,OAAO,QAAQ;oBACjB;mBAVK;;;;;;;;;;IAef;IAEA,OAAO;AACT;KAxFgB","debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/components/TradingChart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { createChart, IChartApi, ISeriesApi, ColorType, UTCTimestamp } from 'lightweight-charts';\r\nimport { motion } from 'framer-motion';\r\nimport { useTheme } from 'next-themes';\r\nimport { TrendingUpIcon, TrendingDownIcon, BarChart3Icon, LineChartIcon } from 'lucide-react';\r\nimport { LoadingSpinner } from './LoadingSpinner';\r\n\r\ninterface ChartDataPoint {\r\n  time: UTCTimestamp;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume?: number;\r\n}\r\n\r\ninterface TradingChartProps {\r\n  symbol?: string;\r\n  data?: ChartDataPoint[];\r\n  height?: number;\r\n  showTimeframes?: boolean;\r\n  showIndicators?: boolean;\r\n  className?: string;\r\n}\r\n\r\ntype Timeframe = '1H' | '4H' | '1D' | '1W' | '1M';\r\ntype ChartType = 'candlestick' | 'line' | 'area';\r\n\r\n// Stable empty array reference to prevent unnecessary re-renders\r\nconst EMPTY_DATA: ChartDataPoint[] = [];\r\n\r\nexport function TradingChart({\r\n  symbol = 'DEMO',\r\n  data = EMPTY_DATA,\r\n  height = 400,\r\n  showTimeframes = true,\r\n  showIndicators = true,\r\n  className = '',\r\n}: TradingChartProps) {\r\n  const chartContainerRef = useRef<HTMLDivElement>(null);\r\n  const chartRef = useRef<IChartApi | null>(null);\r\n  const candlestickSeriesRef = useRef<ISeriesApi<'Candlestick'> | null>(null);\r\n  const dataRef = useRef<ChartDataPoint[]>(EMPTY_DATA);\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<Timeframe>('1D');\r\n  const [chartType, setChartType] = useState<ChartType>('candlestick');\r\n  const [loading, setLoading] = useState(true);\r\n  const [chartData, setChartData] = useState<ChartDataPoint[]>([]);\r\n  const { theme } = useTheme();\r\n\r\n  const timeframes: Timeframe[] = ['1H', '4H', '1D', '1W', '1M'];\r\n\r\n  // Initialize chart\r\n  useEffect(() => {\r\n    if (!chartContainerRef.current) return;\r\n\r\n    const isDark = theme === 'dark';\r\n    \r\n    const chart = createChart(chartContainerRef.current, {\r\n      width: chartContainerRef.current.clientWidth,\r\n      height,\r\n      layout: {\r\n        background: { type: ColorType.Solid, color: 'transparent' },\r\n        textColor: isDark ? '#E5E7EB' : '#374151',\r\n      },\r\n      grid: {\r\n        vertLines: {\r\n          color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n        horzLines: {\r\n          color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n      },\r\n      crosshair: {\r\n        mode: 1, // Normal crosshair\r\n      },\r\n      timeScale: {\r\n        borderColor: isDark ? '#374151' : '#D1D5DB',\r\n        timeVisible: true,\r\n        secondsVisible: false,\r\n      },\r\n      rightPriceScale: {\r\n        borderColor: isDark ? '#374151' : '#D1D5DB',\r\n      },\r\n    });\r\n\r\n    const candlestickSeries = chart.addCandlestickSeries({\r\n      upColor: '#00D4AA',\r\n      downColor: '#F6465D',\r\n      borderDownColor: '#F6465D',\r\n      borderUpColor: '#00D4AA',\r\n      wickDownColor: '#F6465D',\r\n      wickUpColor: '#00D4AA',\r\n    });\r\n\r\n    chartRef.current = chart;\r\n    candlestickSeriesRef.current = candlestickSeries;\r\n\r\n    // Handle resize\r\n    const handleResize = () => {\r\n      if (chartContainerRef.current && chartRef.current) {\r\n        chartRef.current.applyOptions({\r\n          width: chartContainerRef.current.clientWidth,\r\n        });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (chartRef.current) {\r\n        chartRef.current.remove();\r\n        chartRef.current = null;\r\n        candlestickSeriesRef.current = null;\r\n      }\r\n    };\r\n  }, [height, theme]);\r\n\r\n  // Update chart theme\r\n  useEffect(() => {\r\n    if (!chartRef.current) return;\r\n\r\n    const isDark = theme === 'dark';\r\n    \r\n    chartRef.current.applyOptions({\r\n      layout: {\r\n        background: { type: ColorType.Solid, color: 'transparent' },\r\n        textColor: isDark ? '#E5E7EB' : '#374151',\r\n      },\r\n      grid: {\r\n        vertLines: {\r\n          color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n        horzLines: {\r\n          color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n      },\r\n      timeScale: {\r\n        borderColor: isDark ? '#374151' : '#D1D5DB',\r\n      },\r\n      rightPriceScale: {\r\n        borderColor: isDark ? '#374151' : '#D1D5DB',\r\n      },\r\n    });\r\n  }, [theme]);\r\n\r\n  // Handle prop data changes\r\n  useEffect(() => {\r\n    // Only update if data reference actually changed and has content\r\n    if (data !== dataRef.current && data.length > 0 && data !== EMPTY_DATA) {\r\n      console.log('TradingChart: Using provided data', data.length, 'points');\r\n      dataRef.current = data;\r\n      setChartData(data);\r\n      setLoading(false);\r\n    }\r\n  }, [data]);\r\n\r\n  // Load chart data from API\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      // Skip API loading if data is provided via props\r\n      if (data.length > 0 && data !== EMPTY_DATA) {\r\n        return;\r\n      }\r\n\r\n      console.log('TradingChart: Loading data from API', { symbol, selectedTimeframe });\r\n      setLoading(true);\r\n      try {\r\n        // Fetch data from API\r\n        const response = await fetch(`/api/market?type=chart&symbol=${symbol}&timeframe=${selectedTimeframe}&days=30`);\r\n        const result = await response.json();\r\n        \r\n        if (response.ok && result.data && result.data.ohlc) {\r\n          const apiData = result.data.ohlc || [];\r\n          \r\n          // Convert to proper format for Lightweight Charts\r\n          const formattedData = apiData.map((item: any) => ({\r\n            ...item,\r\n            time: item.time as UTCTimestamp,\r\n          }));\r\n          \r\n          console.log('TradingChart: API data loaded', formattedData.length, 'points');\r\n          setChartData(formattedData);\r\n        } else {\r\n          console.warn('Failed to fetch chart data:', result);\r\n          // Set empty data to stop loading\r\n          setChartData([]);\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Failed to load chart data:', error);\r\n        setChartData([]);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [symbol, selectedTimeframe]);\r\n\r\n  // Update chart data\r\n  useEffect(() => {\r\n    if (!candlestickSeriesRef.current || chartData.length === 0) return;\r\n\r\n    candlestickSeriesRef.current.setData(chartData);\r\n    \r\n    // Fit content after data is loaded\r\n    if (chartRef.current) {\r\n      chartRef.current.timeScale().fitContent();\r\n    }\r\n  }, [chartData]);\r\n\r\n  const handleTimeframeChange = (timeframe: Timeframe) => {\r\n    setSelectedTimeframe(timeframe);\r\n  };\r\n\r\n  const currentPrice = chartData.length > 0 ? chartData[chartData.length - 1].close : 0;\r\n  const previousPrice = chartData.length > 1 ? chartData[chartData.length - 2].close : currentPrice;\r\n  const priceChange = currentPrice - previousPrice;\r\n  const priceChangePercent = previousPrice > 0 ? (priceChange / previousPrice) * 100 : 0;\r\n  const isPositive = priceChange >= 0;\r\n\r\n  return (\r\n    <div className={`glass-card ${className}`}>\r\n      {/* Chart Header */}\r\n      <div className=\"p-4 border-b border-white/10 dark:border-black/10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n              {symbol}\r\n            </h3>\r\n            \r\n            {/* Price Information */}\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n                ${currentPrice.toFixed(2)}\r\n              </span>\r\n              <div className={`flex items-center space-x-1 ${isPositive ? 'text-success' : 'text-danger'}`}>\r\n                {isPositive ? (\r\n                  <TrendingUpIcon className=\"w-4 h-4\" />\r\n                ) : (\r\n                  <TrendingDownIcon className=\"w-4 h-4\" />\r\n                )}\r\n                <span className=\"font-medium\">\r\n                  {isPositive ? '+' : ''}{priceChange.toFixed(2)} ({priceChangePercent.toFixed(2)}%)\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chart Type Toggle */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <motion.button\r\n              onClick={() => setChartType('candlestick')}\r\n              className={`p-2 rounded-md transition-colors duration-200 ${\r\n                chartType === 'candlestick'\r\n                  ? 'bg-destock-primary text-white'\r\n                  : 'text-gray-500 hover:text-gray-700 dark:hover:text-gray-300'\r\n              }`}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <BarChart3Icon className=\"w-4 h-4\" />\r\n            </motion.button>\r\n            <motion.button\r\n              onClick={() => setChartType('line')}\r\n              className={`p-2 rounded-md transition-colors duration-200 ${\r\n                chartType === 'line'\r\n                  ? 'bg-destock-primary text-white'\r\n                  : 'text-gray-500 hover:text-gray-700 dark:hover:text-gray-300'\r\n              }`}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <LineChartIcon className=\"w-4 h-4\" />\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Timeframe Selector */}\r\n        {showTimeframes && (\r\n          <div className=\"flex space-x-1\">\r\n            {timeframes.map((timeframe) => (\r\n              <motion.button\r\n                key={timeframe}\r\n                onClick={() => handleTimeframeChange(timeframe)}\r\n                className={`px-3 py-1 text-sm font-medium rounded-md transition-all duration-200 ${\r\n                  selectedTimeframe === timeframe\r\n                    ? 'bg-destock-primary text-white shadow-sm'\r\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                }`}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                {timeframe}\r\n              </motion.button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Chart Container */}\r\n      <div className=\"relative\">\r\n        {loading && (\r\n          <div className=\"absolute inset-0 flex items-center justify-center z-10\">\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n        \r\n        <motion.div\r\n          ref={chartContainerRef}\r\n          className={`${loading ? 'opacity-30' : 'opacity-100'} transition-opacity duration-200`}\r\n          initial={{ opacity: 0, scale: 0.95 }}\r\n          animate={{ opacity: loading ? 0.3 : 1, scale: 1 }}\r\n          transition={{ duration: 0.3 }}\r\n          style={{ height: `${height}px` }}\r\n        />\r\n      </div>\r\n\r\n      {/* Chart Footer with Stats */}\r\n      <div className=\"p-4 border-t border-white/10 dark:border-black/10\">\r\n        <div className=\"grid grid-cols-4 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-500 dark:text-gray-400 block\">Open</span>\r\n            <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n              ${chartData.length > 0 ? chartData[chartData.length - 1].open.toFixed(2) : '0.00'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500 dark:text-gray-400 block\">High</span>\r\n            <span className=\"font-medium text-success\">\r\n              ${chartData.length > 0 ? chartData[chartData.length - 1].high.toFixed(2) : '0.00'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500 dark:text-gray-400 block\">Low</span>\r\n            <span className=\"font-medium text-danger\">\r\n              ${chartData.length > 0 ? chartData[chartData.length - 1].low.toFixed(2) : '0.00'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500 dark:text-gray-400 block\">Volume</span>\r\n            <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n              {chartData.length > 0 ? (chartData[chartData.length - 1].volume || 0).toLocaleString() : '0'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1240, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/app/portfolio/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useAccount } from 'wagmi';\r\nimport { useDSTK } from '@/lib/hooks/useDSTK';\r\nimport { useDeStock } from '@/lib/hooks/useDeStock';\r\nimport { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { WalletIcon, TrendingUpIcon, TrendingDownIcon, PieChartIcon, DollarSignIcon, BarChart3Icon, Activity, Eye, EyeOff } from 'lucide-react';\r\nimport { AnimatedCounter } from '@/components/AnimatedCounter';\r\nimport { TradingChart } from '@/components/TradingChart';\r\nimport { LoadingSpinner } from '@/components/LoadingSpinner';\r\n\r\ninterface HoldingItem {\r\n  companyId: number;\r\n  companyName: string;\r\n  symbol: string;\r\n  shares: string;\r\n  currentPrice: string;\r\n  totalValue: string;\r\n  change: number;\r\n  changePercent: number;\r\n  avgBuyPrice: string;\r\n  pnl: number;\r\n  pnlPercent: number;\r\n  allocation: number;\r\n}\r\n\r\ninterface PortfolioStats {\r\n  totalValue: number;\r\n  totalPnL: number;\r\n  totalPnLPercent: number;\r\n  dayChange: number;\r\n  dayChangePercent: number;\r\n  bestPerformer: string;\r\n  worstPerformer: string;\r\n}\r\n\r\nexport default function PortfolioPage() {\r\n  const { isConnected, address } = useAccount();\r\n  const { balance } = useDSTK();\r\n  const { getShareBalance, nextCompanyId } = useDeStock();\r\n  const [holdings, setHoldings] = useState<HoldingItem[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [mounted, setMounted] = useState(false);\r\n  const [stats, setStats] = useState<PortfolioStats>({\r\n    totalValue: 0,\r\n    totalPnL: 0,\r\n    totalPnLPercent: 0,\r\n    dayChange: 0,\r\n    dayChangePercent: 0,\r\n    bestPerformer: '',\r\n    worstPerformer: ''\r\n  });\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState('1D');\r\n  const [showValues, setShowValues] = useState(true);\r\n  const [sortBy, setSortBy] = useState<'value' | 'pnl' | 'change'>('value');\r\n\r\n  useEffect(() => {\r\n    if (isConnected) {\r\n      loadPortfolio();\r\n      const interval = setInterval(loadPortfolio, 30000); // Update every 30 seconds\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isConnected, nextCompanyId]);\r\n\r\n  // Fix hydration by ensuring client-side rendering only after mount\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  const loadPortfolio = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/portfolio');\r\n      const result = await response.json();\r\n      \r\n      if (result.portfolio) {\r\n        setHoldings(result.portfolio.holdings || []);\r\n        setStats(result.portfolio.stats || stats);\r\n      } else {\r\n        // Fallback mock data\r\n        const mockHoldings: HoldingItem[] = [\r\n          {\r\n            companyId: 0,\r\n            companyName: 'TechCorp Inc.',\r\n            symbol: 'TECH',\r\n            shares: '150',\r\n            currentPrice: '85.42',\r\n            totalValue: '12813',\r\n            change: 2.34,\r\n            changePercent: 2.8,\r\n            avgBuyPrice: '78.90',\r\n            pnl: 978,\r\n            pnlPercent: 8.26,\r\n            allocation: 45.2\r\n          },\r\n          {\r\n            companyId: 1,\r\n            companyName: 'Green Energy Solutions',\r\n            symbol: 'GREN',\r\n            shares: '200',\r\n            currentPrice: '34.76',\r\n            totalValue: '6952',\r\n            change: -1.12,\r\n            changePercent: -3.1,\r\n            avgBuyPrice: '36.80',\r\n            pnl: -408,\r\n            pnlPercent: -5.56,\r\n            allocation: 24.5\r\n          },\r\n          {\r\n            companyId: 2,\r\n            companyName: 'FinTech Innovations',\r\n            symbol: 'FINX',\r\n            shares: '80',\r\n            currentPrice: '92.15',\r\n            totalValue: '7372',\r\n            change: 4.67,\r\n            changePercent: 5.3,\r\n            avgBuyPrice: '88.20',\r\n            pnl: 316,\r\n            pnlPercent: 4.48,\r\n            allocation: 26.0\r\n          },\r\n          {\r\n            companyId: 3,\r\n            companyName: 'BioMed Research',\r\n            symbol: 'BIOM',\r\n            shares: '45',\r\n            currentPrice: '25.80',\r\n            totalValue: '1161',\r\n            change: 0.85,\r\n            changePercent: 3.4,\r\n            avgBuyPrice: '27.30',\r\n            pnl: -67.5,\r\n            pnlPercent: -5.49,\r\n            allocation: 4.1\r\n          }\r\n        ];\r\n        \r\n        setHoldings(mockHoldings);\r\n        \r\n        const totalValue = mockHoldings.reduce((sum, h) => sum + parseFloat(h.totalValue), 0);\r\n        const totalPnL = mockHoldings.reduce((sum, h) => sum + h.pnl, 0);\r\n        const dayChange = mockHoldings.reduce((sum, h) => sum + (parseFloat(h.totalValue) * h.changePercent / 100), 0);\r\n        \r\n        setStats({\r\n          totalValue,\r\n          totalPnL,\r\n          totalPnLPercent: (totalPnL / (totalValue - totalPnL)) * 100,\r\n          dayChange,\r\n          dayChangePercent: (dayChange / totalValue) * 100,\r\n          bestPerformer: mockHoldings.reduce((best, h) => h.changePercent > best.changePercent ? h : best).symbol,\r\n          worstPerformer: mockHoldings.reduce((worst, h) => h.changePercent < worst.changePercent ? h : worst).symbol\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load portfolio:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sortedHoldings = [...holdings].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'value':\r\n        return parseFloat(b.totalValue) - parseFloat(a.totalValue);\r\n      case 'pnl':\r\n        return b.pnl - a.pnl;\r\n      case 'change':\r\n        return b.changePercent - a.changePercent;\r\n      default:\r\n        return 0;\r\n    }\r\n  });\r\n\r\n  if (!isConnected) {\r\n    return (\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <div className=\"glass-card text-center py-16\">\r\n          <WalletIcon className=\"w-20 h-20 text-blue-400 mx-auto mb-6\" />\r\n          <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent mb-4\">\r\n            Connect Your Wallet\r\n          </h1>\r\n          <p className=\"text-gray-400 text-lg\">\r\n            Connect your wallet to view your portfolio and track your investments.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render simple version before hydration to prevent mismatch\r\n  if (!mounted) {\r\n    return (\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <div className=\"glass-card text-center py-16\">\r\n          <WalletIcon className=\"w-20 h-20 text-blue-400 mx-auto mb-6\" />\r\n          <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent mb-4\">\r\n            Portfolio Analytics\r\n          </h1>\r\n          <p className=\"text-gray-400 text-lg\">\r\n            Loading your portfolio...\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"max-w-7xl mx-auto space-y-8\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n      suppressHydrationWarning={true}\r\n    >\r\n      {/* Header */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className=\"flex justify-between items-center\"\r\n      >\r\n        <div>\r\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent mb-2\">\r\n            Portfolio Analytics\r\n          </h1>\r\n          <p className=\"text-gray-400 text-lg\">\r\n            Advanced portfolio tracking with real-time analytics and insights.\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-4\">\r\n          <button\r\n            onClick={() => setShowValues(!showValues)}\r\n            className=\"glass-card p-3 hover:bg-gray-700/30 transition-all duration-200\"\r\n          >\r\n            {showValues ? <Eye className=\"w-5 h-5\" /> : <EyeOff className=\"w-5 h-5\" />}\r\n          </button>\r\n          \r\n          <select\r\n            value={selectedTimeframe}\r\n            onChange={(e) => setSelectedTimeframe(e.target.value)}\r\n            className=\"glass-card p-3 bg-transparent border-0 focus:ring-2 focus:ring-blue-500/50\"\r\n          >\r\n            <option value=\"1D\">1 Day</option>\r\n            <option value=\"1W\">1 Week</option>\r\n            <option value=\"1M\">1 Month</option>\r\n            <option value=\"3M\">3 Months</option>\r\n            <option value=\"1Y\">1 Year</option>\r\n          </select>\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Portfolio Overview Cards */}\r\n      <motion.div \r\n        className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.1 }}\r\n      >\r\n        {[\r\n          {\r\n            title: 'Total Portfolio Value',\r\n            value: showValues ? stats.totalValue : '****',\r\n            suffix: showValues ? ' DSTK' : '',\r\n            icon: DollarSignIcon,\r\n            color: 'text-blue-400',\r\n            bgColor: 'from-blue-500/20 to-blue-600/20'\r\n          },\r\n          {\r\n            title: 'Total P&L',\r\n            value: showValues ? (stats.totalPnL >= 0 ? '+' : '') + stats.totalPnL.toFixed(2) : '****',\r\n            suffix: showValues ? ' DSTK' : '',\r\n            icon: TrendingUpIcon,\r\n            color: stats.totalPnL >= 0 ? 'text-green-400' : 'text-red-400',\r\n            bgColor: stats.totalPnL >= 0 ? 'from-green-500/20 to-green-600/20' : 'from-red-500/20 to-red-600/20'\r\n          },\r\n          {\r\n            title: '24h Change',\r\n            value: showValues ? (stats.dayChange >= 0 ? '+' : '') + stats.dayChange.toFixed(2) : '****',\r\n            suffix: showValues ? ` (${stats.dayChangePercent.toFixed(2)}%)` : '',\r\n            icon: stats.dayChange >= 0 ? TrendingUpIcon : TrendingDownIcon,\r\n            color: stats.dayChange >= 0 ? 'text-green-400' : 'text-red-400',\r\n            bgColor: stats.dayChange >= 0 ? 'from-green-500/20 to-green-600/20' : 'from-red-500/20 to-red-600/20'\r\n          },\r\n          {\r\n            title: 'DSTK Balance',\r\n            value: showValues ? balance : '****',\r\n            suffix: showValues ? ' DSTK' : '',\r\n            icon: WalletIcon,\r\n            color: 'text-purple-400',\r\n            bgColor: 'from-purple-500/20 to-purple-600/20'\r\n          }\r\n        ].map((card, index) => (\r\n          <motion.div\r\n            key={card.title}\r\n            className={`glass-card p-6 bg-gradient-to-br ${card.bgColor}`}\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ delay: 0.1 + index * 0.05 }}\r\n            whileHover={{ scale: 1.02 }}\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 className=\"text-sm font-medium text-gray-400 mb-2\">{card.title}</h3>\r\n                <div className={`text-2xl font-bold ${card.color}`}>\r\n                  <AnimatedCounter \r\n                    value={typeof card.value === 'string' && card.value.includes('*') ? 0 : parseFloat(card.value.toString().replace(/[^0-9.-]/g, ''))} \r\n                    decimals={2}\r\n                    duration={1000}\r\n                  />\r\n                  {card.suffix}\r\n                </div>\r\n              </div>\r\n              <card.icon className={`w-8 h-8 ${card.color}`} />\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </motion.div>\r\n\r\n      {/* Portfolio Chart */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.2 }}\r\n      >\r\n        <TradingChart symbol=\"PORTFOLIO\" height={400} />\r\n      </motion.div>\r\n\r\n      {/* Holdings Table */}\r\n      <motion.div \r\n        className=\"glass-card p-6\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.3 }}\r\n      >\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\r\n            Holdings Overview\r\n          </h2>\r\n          \r\n          <div className=\"flex items-center space-x-3\">\r\n            <span className=\"text-sm text-gray-400\">Sort by:</span>\r\n            <select\r\n              value={sortBy}\r\n              onChange={(e) => setSortBy(e.target.value as any)}\r\n              className=\"glass-card p-2 bg-transparent border-0 focus:ring-2 focus:ring-blue-500/50 text-sm\"\r\n            >\r\n              <option value=\"value\">Value</option>\r\n              <option value=\"pnl\">P&L</option>\r\n              <option value=\"change\">Change</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        {loading ? (\r\n          <div className=\"flex justify-center py-12\">\r\n            <LoadingSpinner size=\"large\" />\r\n          </div>\r\n        ) : holdings.length === 0 ? (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            className=\"text-center py-16\"\r\n          >\r\n            <Activity className=\"w-16 h-16 text-gray-500 mx-auto mb-4\" />\r\n            <h3 className=\"text-xl font-bold text-gray-300 mb-2\">\r\n              No Holdings Yet\r\n            </h3>\r\n            <p className=\"text-gray-400 mb-6\">\r\n              Start trading to build your portfolio and track your investments.\r\n            </p>\r\n          </motion.div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"border-b border-gray-700/50\">\r\n                  {[\r\n                    'Company',\r\n                    'Holdings',\r\n                    'Current Price',\r\n                    'Total Value',\r\n                    'P&L',\r\n                    '24h Change',\r\n                    'Allocation'\r\n                  ].map((header) => (\r\n                    <th key={header} className=\"text-left py-4 px-4 text-gray-300 font-medium\">\r\n                      {header}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <AnimatePresence>\r\n                  {sortedHoldings.map((holding, index) => (\r\n                    <motion.tr\r\n                      key={holding.companyId}\r\n                      className=\"border-b border-gray-800/30 hover:bg-gray-800/20 transition-colors duration-200\"\r\n                      initial={{ opacity: 0, y: 20 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      transition={{ duration: 0.3, delay: index * 0.05 }}\r\n                      whileHover={{ scale: 1.01 }}\r\n                    >\r\n                      <td className=\"py-4 px-4\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <div className=\"w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 \r\n                                        flex items-center justify-center text-white font-bold text-sm\">\r\n                            {holding.symbol.charAt(0)}\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"font-semibold text-white\">{holding.companyName}</div>\r\n                            <div className=\"text-sm text-gray-400\">{holding.symbol}</div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"py-4 px-4\">\r\n                        <div className=\"text-white font-medium\">{holding.shares} shares</div>\r\n                        <div className=\"text-sm text-gray-400\">\r\n                          Avg: {showValues ? holding.avgBuyPrice : '***'} DSTK\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"py-4 px-4\">\r\n                        <div className=\"font-semibold text-white\">\r\n                          {showValues ? holding.currentPrice : '***'} DSTK\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"py-4 px-4\">\r\n                        <div className=\"font-semibold text-white\">\r\n                          {showValues ? holding.totalValue : '***'} DSTK\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"py-4 px-4\">\r\n                        <div className={`font-semibold ${holding.pnl >= 0 ? 'text-green-400' : 'text-red-400'}`}>\r\n                          {showValues ? (holding.pnl >= 0 ? '+' : '') + holding.pnl.toFixed(2) : '***'} DSTK\r\n                        </div>\r\n                        <div className={`text-sm ${holding.pnlPercent >= 0 ? 'text-green-400' : 'text-red-400'}`}>\r\n                          ({holding.pnlPercent >= 0 ? '+' : ''}{holding.pnlPercent.toFixed(2)}%)\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"py-4 px-4\">\r\n                        <div className={`font-semibold ${holding.changePercent >= 0 ? 'text-green-400' : 'text-red-400'}`}>\r\n                          {holding.changePercent >= 0 ? '+' : ''}{holding.changePercent.toFixed(2)}%\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"py-4 px-4\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <div className=\"flex-1 bg-gray-700 rounded-full h-2\">\r\n                            <div \r\n                              className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full\"\r\n                              style={{ width: `${holding.allocation}%` }}\r\n                            />\r\n                          </div>\r\n                          <span className=\"text-sm text-gray-400 min-w-[3rem]\">\r\n                            {holding.allocation.toFixed(1)}%\r\n                          </span>\r\n                        </div>\r\n                      </td>\r\n                    </motion.tr>\r\n                  ))}\r\n                </AnimatePresence>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}