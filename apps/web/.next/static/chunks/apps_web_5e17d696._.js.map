{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/lib/hooks/useDeStock.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract, useWaitForTransactionReceipt } from 'wagmi';\r\nimport { DESTOCK_ABI, getContractAddress } from '../contracts';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { Address, parseEther, formatEther } from 'viem';\r\n\r\nexport function useDeStock() {\r\n  const { address, chainId } = useAccount();\r\n  \r\n  const contractAddress = useMemo(() => {\r\n    if (!chainId) return undefined;\r\n    return getContractAddress('DESTOCK', chainId);\r\n  }, [chainId]);\r\n\r\n  const { writeContract, data: hash, error, isPending } = useWriteContract();\r\n  const { isLoading: isConfirming, isSuccess: isConfirmed } = useWaitForTransactionReceipt({\r\n    hash,\r\n  });\r\n\r\n  // Read functions\r\n  const { data: nextCompanyId } = useReadContract({\r\n    address: contractAddress,\r\n    abi: DESTOCK_ABI,\r\n    functionName: 'nextCompanyId',\r\n  });\r\n\r\n  const getCompany = useCallback((companyId: number) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'companies',\r\n      args: [BigInt(companyId)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getSharePrice = useCallback((companyId: number) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getSharePrice',\r\n      args: [BigInt(companyId)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getShareBalance = useCallback((companyId: number, userAddress?: Address) => {\r\n    const targetAddress = userAddress || address;\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'balanceOf',\r\n      args: targetAddress ? [targetAddress, BigInt(companyId)] : undefined,\r\n      query: {\r\n        enabled: !!targetAddress,\r\n      },\r\n    });\r\n  }, [contractAddress, address]);\r\n\r\n  // Write functions\r\n  const registerCompany = useCallback(\r\n    (name: string, initialPrice: string, totalSupply: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'registerCompany',\r\n        args: [name, parseEther(initialPrice), BigInt(totalSupply)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const buyShares = useCallback(\r\n    (companyId: number, amount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'buyShares',\r\n        args: [BigInt(companyId), BigInt(amount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const sellShares = useCallback(\r\n    (companyId: number, amount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'sellShares',\r\n        args: [BigInt(companyId), BigInt(amount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  return {\r\n    // Contract data\r\n    contractAddress,\r\n    nextCompanyId: nextCompanyId ? Number(nextCompanyId) : 0,\r\n    \r\n    // Read functions\r\n    getCompany,\r\n    getSharePrice,\r\n    getShareBalance,\r\n    \r\n    // Write functions\r\n    registerCompany,\r\n    buyShares,\r\n    sellShares,\r\n    \r\n    // Transaction state\r\n    hash,\r\n    isPending,\r\n    isConfirming,\r\n    isConfirmed,\r\n    error,\r\n  };\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/components/TradeView.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\nimport { useDeStock } from '@/lib/hooks/useDeStock';\r\nimport { useDSTK } from '@/lib/hooks/useDSTK';\r\nimport { useAccount } from 'wagmi';\r\nimport { ShoppingCartIcon, DollarSignIcon, TrendingUpIcon, TrendingDownIcon } from 'lucide-react';\r\n\r\nconst schema = z.object({\r\n  companyId: z.string().min(1, 'Please select a company'),\r\n  amount: z.string().min(1, 'Amount is required'),\r\n});\r\n\r\ntype FormData = z.infer<typeof schema>;\r\n\r\ninterface Company {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n}\r\n\r\nexport function TradeView() {\r\n  const { isConnected } = useAccount();\r\n  const { buyShares, sellShares, getSharePrice, getShareBalance, nextCompanyId, isPending, isConfirming, isConfirmed, error } = useDeStock();\r\n  const { balance } = useDSTK();\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [selectedCompany, setSelectedCompany] = useState<Company | null>(null);\r\n  const [tradeType, setTradeType] = useState<'buy' | 'sell'>('buy');\r\n  const [userShares, setUserShares] = useState<string>('0');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n    setValue,\r\n    reset,\r\n  } = useForm<FormData>({\r\n    resolver: zodResolver(schema),\r\n  });\r\n\r\n  const watchedCompanyId = watch('companyId');\r\n  const watchedAmount = watch('amount');\r\n\r\n  useEffect(() => {\r\n    if (isConnected && nextCompanyId > 0) {\r\n      loadCompanies();\r\n    }\r\n  }, [isConnected, nextCompanyId]);\r\n\r\n  useEffect(() => {\r\n    if (watchedCompanyId) {\r\n      const company = companies.find(c => c.id.toString() === watchedCompanyId);\r\n      if (company) {\r\n        setSelectedCompany(company);\r\n        loadUserShares(company.id);\r\n      }\r\n    }\r\n  }, [watchedCompanyId, companies]);\r\n\r\n  const loadCompanies = async () => {\r\n    try {\r\n      // Placeholder implementation - would need real contract calls\r\n      const companiesData: Company[] = [];\r\n      for (let i = 0; i < nextCompanyId; i++) {\r\n        companiesData.push({\r\n          id: i,\r\n          name: `Company ${i + 1}`,\r\n          price: '12.5',\r\n        });\r\n      }\r\n      setCompanies(companiesData);\r\n    } catch (error) {\r\n      console.error('Failed to load companies:', error);\r\n    }\r\n  };\r\n\r\n  const loadUserShares = async (companyId: number) => {\r\n    try {\r\n      // Placeholder implementation - would need real contract calls\r\n      setUserShares('100');\r\n    } catch (error) {\r\n      console.error('Failed to load user shares:', error);\r\n      setUserShares('0');\r\n    }\r\n  };\r\n\r\n  const calculateCost = () => {\r\n    if (!selectedCompany || !watchedAmount) return '0';\r\n    return (parseFloat(selectedCompany.price) * parseFloat(watchedAmount)).toFixed(2);\r\n  };\r\n\r\n  const onSubmit = async (data: FormData) => {\r\n    if (!selectedCompany) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (tradeType === 'buy') {\r\n        await buyShares(selectedCompany.id, data.amount);\r\n      } else {\r\n        await sellShares(selectedCompany.id, data.amount);\r\n      }\r\n      reset();\r\n    } catch (error) {\r\n      console.error('Trade failed:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const canTrade = () => {\r\n    if (!selectedCompany || !watchedAmount) return false;\r\n    \r\n    const amount = parseFloat(watchedAmount);\r\n    if (amount <= 0) return false;\r\n\r\n    if (tradeType === 'buy') {\r\n      const cost = parseFloat(calculateCost());\r\n      return parseFloat(balance) >= cost;\r\n    } else {\r\n      return parseFloat(userShares) >= amount;\r\n    }\r\n  };\r\n\r\n  if (!isConnected) {\r\n    return (\r\n      <div className=\"trading-card text-center\">\r\n        <ShoppingCartIcon className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n          Connect Your Wallet\r\n        </h3>\r\n        <p className=\"text-gray-600\">\r\n          Connect your wallet to start trading shares.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"trading-card\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h3 className=\"text-lg font-medium text-gray-900\">Trade Shares</h3>\r\n        <div className=\"flex bg-gray-100 rounded-lg p-1\">\r\n          <button\r\n            onClick={() => setTradeType('buy')}\r\n            className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n              tradeType === 'buy'\r\n                ? 'bg-white text-destock-primary shadow-sm'\r\n                : 'text-gray-600 hover:text-gray-900'\r\n            }`}\r\n          >\r\n            Buy\r\n          </button>\r\n          <button\r\n            onClick={() => setTradeType('sell')}\r\n            className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n              tradeType === 'sell'\r\n                ? 'bg-white text-destock-primary shadow-sm'\r\n                : 'text-gray-600 hover:text-gray-900'\r\n            }`}\r\n          >\r\n            Sell\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n        <div>\r\n          <label className=\"destock-label\" htmlFor=\"companyId\">\r\n            Select Company\r\n          </label>\r\n          <select\r\n            {...register('companyId')}\r\n            id=\"companyId\"\r\n            className=\"destock-input\"\r\n          >\r\n            <option value=\"\">Choose a company</option>\r\n            {companies.map((company) => (\r\n              <option key={company.id} value={company.id.toString()}>\r\n                {company.name} - {company.price} DSTK\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.companyId && (\r\n            <p className=\"mt-1 text-sm text-red-600\">{errors.companyId.message}</p>\r\n          )}\r\n        </div>\r\n\r\n        {selectedCompany && (\r\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-sm font-medium text-gray-900\">\r\n                {selectedCompany.name}\r\n              </span>\r\n              <span className=\"text-lg font-semibold text-destock-primary\">\r\n                {selectedCompany.price} DSTK\r\n              </span>\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">\r\n              Your Balance: {userShares} shares\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <label className=\"destock-label\" htmlFor=\"amount\">\r\n            Amount\r\n          </label>\r\n          <input\r\n            {...register('amount')}\r\n            type=\"number\"\r\n            step=\"1\"\r\n            min=\"1\"\r\n            id=\"amount\"\r\n            className=\"destock-input\"\r\n            placeholder=\"Number of shares\"\r\n          />\r\n          {errors.amount && (\r\n            <p className=\"mt-1 text-sm text-red-600\">{errors.amount.message}</p>\r\n          )}\r\n        </div>\r\n\r\n        {selectedCompany && watchedAmount && (\r\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n            <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Transaction Summary</h4>\r\n            <div className=\"space-y-1 text-sm text-gray-600\">\r\n              <div className=\"flex justify-between\">\r\n                <span>Shares:</span>\r\n                <span>{watchedAmount}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span>Price per share:</span>\r\n                <span>{selectedCompany.price} DSTK</span>\r\n              </div>\r\n              <div className=\"flex justify-between font-medium border-t pt-1\">\r\n                <span>Total {tradeType === 'buy' ? 'Cost' : 'Proceeds'}:</span>\r\n                <span>{calculateCost()} DSTK</span>\r\n              </div>\r\n            </div>\r\n            {tradeType === 'buy' && (\r\n              <div className=\"mt-2 text-xs text-gray-500\">\r\n                Your DSTK Balance: {balance} DSTK\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"bg-red-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-red-800\">\r\n              Transaction failed: {error.message}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!canTrade() || isPending || isConfirming || loading}\r\n          className={`w-full flex items-center justify-center space-x-2 py-3 px-4 rounded-md font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed ${\r\n            tradeType === 'buy'\r\n              ? 'bg-green-600 hover:bg-green-700 text-white'\r\n              : 'bg-red-600 hover:bg-red-700 text-white'\r\n          }`}\r\n        >\r\n          {tradeType === 'buy' ? (\r\n            <TrendingUpIcon className=\"w-4 h-4\" />\r\n          ) : (\r\n            <TrendingDownIcon className=\"w-4 h-4\" />\r\n          )}\r\n          <span>\r\n            {isPending || isConfirming || loading\r\n              ? 'Processing...'\r\n              : !canTrade()\r\n              ? tradeType === 'buy' \r\n                ? 'Insufficient Balance' \r\n                : 'Insufficient Shares'\r\n              : `${tradeType === 'buy' ? 'Buy' : 'Sell'} Shares`}\r\n          </span>\r\n        </button>\r\n\r\n        {isConfirmed && (\r\n          <div className=\"bg-green-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-green-800\">\r\n              Transaction completed successfully! 🎉\r\n            </p>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/components/CompanyList.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useDeStock } from '@/lib/hooks/useDeStock';\r\nimport { useAccount } from 'wagmi';\r\nimport Link from 'next/link';\r\nimport { TrendingUpIcon, TrendingDownIcon, BuildingIcon } from 'lucide-react';\r\n\r\ninterface Company {\r\n  id: number;\r\n  name: string;\r\n  owner: string;\r\n  initialPrice: string;\r\n  totalSupply: string;\r\n  currentPrice?: string;\r\n}\r\n\r\nexport function CompanyList() {\r\n  const { isConnected } = useAccount();\r\n  const { nextCompanyId, getCompany, getSharePrice } = useDeStock();\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (isConnected && nextCompanyId > 0) {\r\n      loadCompanies();\r\n    }\r\n  }, [isConnected, nextCompanyId]);\r\n\r\n  const loadCompanies = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const companyPromises = [];\r\n      for (let i = 0; i < nextCompanyId; i++) {\r\n        companyPromises.push(loadCompanyData(i));\r\n      }\r\n      const loadedCompanies = await Promise.all(companyPromises);\r\n      setCompanies(loadedCompanies.filter(Boolean) as Company[]);\r\n    } catch (error) {\r\n      console.error('Failed to load companies:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadCompanyData = async (id: number): Promise<Company | null> => {\r\n    try {\r\n      // Note: This would need to be implemented with actual contract calls\r\n      // const companyData = await getCompany(id);\r\n      // const priceData = await getSharePrice(id);\r\n      \r\n      // Placeholder data for now\r\n      return {\r\n        id,\r\n        name: `Company ${id + 1}`,\r\n        owner: '0x1234567890123456789012345678901234567890',\r\n        initialPrice: '10.0',\r\n        totalSupply: '1000',\r\n        currentPrice: '12.5',\r\n      };\r\n    } catch (error) {\r\n      console.error(`Failed to load company ${id}:`, error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const filteredCompanies = companies.filter(company =>\r\n    company.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const formatAddress = (address: string) => {\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  };\r\n\r\n  if (!isConnected) {\r\n    return (\r\n      <div className=\"destock-card text-center py-8\">\r\n        <BuildingIcon className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n          Connect Your Wallet\r\n        </h3>\r\n        <p className=\"text-gray-600\">\r\n          Connect your wallet to view listed companies.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {[...Array(3)].map((_, i) => (\r\n          <div key={i} className=\"destock-card animate-pulse\">\r\n            <div className=\"p-4\">\r\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\r\n              <div className=\"h-3 bg-gray-200 rounded w-1/2 mb-2\"></div>\r\n              <div className=\"h-3 bg-gray-200 rounded w-1/4\"></div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (companies.length === 0) {\r\n    return (\r\n      <div className=\"destock-card text-center py-8\">\r\n        <BuildingIcon className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n          No Companies Listed\r\n        </h3>\r\n        <p className=\"text-gray-600 mb-4\">\r\n          Be the first to register your company on DeStock!\r\n        </p>\r\n        <Link\r\n          href=\"/register\"\r\n          className=\"destock-button-primary inline-flex items-center\"\r\n        >\r\n          Register Company\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h3 className=\"text-lg font-medium text-gray-900\">\r\n          Listed Companies ({companies.length})\r\n        </h3>\r\n        <div className=\"w-64\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search companies...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"destock-input text-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-3\">\r\n        {filteredCompanies.map((company) => {\r\n          const priceChange = company.currentPrice && company.initialPrice\r\n            ? ((parseFloat(company.currentPrice) - parseFloat(company.initialPrice)) / parseFloat(company.initialPrice)) * 100\r\n            : 0;\r\n\r\n          return (\r\n            <Link\r\n              key={company.id}\r\n              href={`/company/${company.id}`}\r\n              className=\"block\"\r\n            >\r\n              <div className=\"company-card\">\r\n                <div className=\"flex justify-between items-start\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center space-x-2 mb-2\">\r\n                      <BuildingIcon className=\"w-4 h-4 text-destock-primary\" />\r\n                      <h4 className=\"font-medium text-gray-900\">{company.name}</h4>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600 space-y-1\">\r\n                      <div>Owner: {formatAddress(company.owner)}</div>\r\n                      <div>Total Supply: {company.totalSupply} shares</div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-right\">\r\n                    <div className=\"text-lg font-semibold text-gray-900\">\r\n                      {company.currentPrice || company.initialPrice} DSTK\r\n                    </div>\r\n                    {company.currentPrice && priceChange !== 0 && (\r\n                      <div className={`flex items-center text-sm ${priceChange > 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                        {priceChange > 0 ? (\r\n                          <TrendingUpIcon className=\"w-3 h-3 mr-1\" />\r\n                        ) : (\r\n                          <TrendingDownIcon className=\"w-3 h-3 mr-1\" />\r\n                        )}\r\n                        {priceChange > 0 ? '+' : ''}{priceChange.toFixed(2)}%\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {filteredCompanies.length === 0 && searchTerm && (\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          No companies found matching \"{searchTerm}\"\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AANA;;;;;;AAiBO,SAAS;;IACd,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IACjC,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,aAAU,AAAD;IAC9D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,eAAe,gBAAgB,GAAG;gBACpC;YACF;QACF;gCAAG;QAAC;QAAa;KAAc;IAE/B,MAAM,gBAAgB;QACpB,WAAW;QACX,IAAI;YACF,MAAM,kBAAkB,EAAE;YAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,IAAK;gBACtC,gBAAgB,IAAI,CAAC,gBAAgB;YACvC;YACA,MAAM,kBAAkB,MAAM,QAAQ,GAAG,CAAC;YAC1C,aAAa,gBAAgB,MAAM,CAAC;QACtC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,kBAAkB,OAAO;QAC7B,IAAI;YACF,qEAAqE;YACrE,4CAA4C;YAC5C,6CAA6C;YAE7C,2BAA2B;YAC3B,OAAO;gBACL;gBACA,MAAM,CAAC,QAAQ,EAAE,KAAK,GAAG;gBACzB,OAAO;gBACP,cAAc;gBACd,aAAa;gBACb,cAAc;YAChB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC,EAAE;YAC/C,OAAO;QACT;IACF;IAEA,MAAM,oBAAoB,UAAU,MAAM,CAAC,CAAA,UACzC,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;IAG5D,MAAM,gBAAgB,CAAC;QACrB,OAAO,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;IACxD;IAEA,IAAI,CAAC,aAAa;QAChB,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,iNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;8BACxB,6LAAC;oBAAG,WAAU;8BAAyC;;;;;;8BAGvD,6LAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;IAKnC;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACZ;mBAAI,MAAM;aAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,6LAAC;oBAAY,WAAU;8BACrB,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;;;;;;;mBAJT;;;;;;;;;;IAUlB;IAEA,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,iNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;8BACxB,6LAAC;oBAAG,WAAU;8BAAyC;;;;;;8BAGvD,6LAAC;oBAAE,WAAU;8BAAqB;;;;;;8BAGlC,6LAAC,+JAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;;4BAAoC;4BAC7B,UAAU,MAAM;4BAAC;;;;;;;kCAEtC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4BAC7C,WAAU;;;;;;;;;;;;;;;;;0BAKhB,6LAAC;gBAAI,WAAU;0BACZ,kBAAkB,GAAG,CAAC,CAAC;oBACtB,MAAM,cAAc,QAAQ,YAAY,IAAI,QAAQ,YAAY,GAC5D,AAAC,CAAC,WAAW,QAAQ,YAAY,IAAI,WAAW,QAAQ,YAAY,CAAC,IAAI,WAAW,QAAQ,YAAY,IAAK,MAC7G;oBAEJ,qBACE,6LAAC,+JAAA,CAAA,UAAI;wBAEH,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE;wBAC9B,WAAU;kCAEV,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,iNAAA,CAAA,eAAY;wDAAC,WAAU;;;;;;kEACxB,6LAAC;wDAAG,WAAU;kEAA6B,QAAQ,IAAI;;;;;;;;;;;;0DAEzD,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;4DAAI;4DAAQ,cAAc,QAAQ,KAAK;;;;;;;kEACxC,6LAAC;;4DAAI;4DAAe,QAAQ,WAAW;4DAAC;;;;;;;;;;;;;;;;;;;kDAI5C,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;oDACZ,QAAQ,YAAY,IAAI,QAAQ,YAAY;oDAAC;;;;;;;4CAE/C,QAAQ,YAAY,IAAI,gBAAgB,mBACvC,6LAAC;gDAAI,WAAW,CAAC,0BAA0B,EAAE,cAAc,IAAI,mBAAmB,gBAAgB;;oDAC/F,cAAc,kBACb,6LAAC,yNAAA,CAAA,iBAAc;wDAAC,WAAU;;;;;6EAE1B,6LAAC,6NAAA,CAAA,mBAAgB;wDAAC,WAAU;;;;;;oDAE7B,cAAc,IAAI,MAAM;oDAAI,YAAY,OAAO,CAAC;oDAAG;;;;;;;;;;;;;;;;;;;;;;;;uBA5BzD,QAAQ,EAAE;;;;;gBAoCrB;;;;;;YAGD,kBAAkB,MAAM,KAAK,KAAK,4BACjC,6LAAC;gBAAI,WAAU;;oBAAiC;oBAChB;oBAAW;;;;;;;;;;;;;AAKnD;GAnLgB;;QACU,8JAAA,CAAA,aAAU;QACmB,4IAAA,CAAA,aAAU;;;KAFjD","debugId":null}}]
}