{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/lib/hooks/useDeStock.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract, useWaitForTransactionReceipt } from 'wagmi';\r\nimport { DESTOCK_ABI, getContractAddress } from '../contracts';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { Address, parseEther, formatEther } from 'viem';\r\n\r\nexport function useDeStock() {\r\n  const { address, chainId } = useAccount();\r\n  \r\n  const contractAddress = useMemo(() => {\r\n    if (!chainId) return undefined;\r\n    return getContractAddress('DESTOCK', chainId);\r\n  }, [chainId]);\r\n\r\n  const { writeContract, data: hash, error, isPending } = useWriteContract();\r\n  const { isLoading: isConfirming, isSuccess: isConfirmed } = useWaitForTransactionReceipt({\r\n    hash,\r\n  });\r\n\r\n  // Read functions\r\n  const { data: nextCompanyId } = useReadContract({\r\n    address: contractAddress,\r\n    abi: DESTOCK_ABI,\r\n    functionName: 'nextCompanyId',\r\n  });\r\n\r\n  const getCompany = useCallback((companyId: number) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'companies',\r\n      args: [BigInt(companyId)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getSharePrice = useCallback((companyId: number) => {\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getSharePrice',\r\n      args: [BigInt(companyId)],\r\n    });\r\n  }, [contractAddress]);\r\n\r\n  const getShareBalance = useCallback((companyId: number, userAddress?: Address) => {\r\n    const targetAddress = userAddress || address;\r\n    return useReadContract({\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'balanceOf',\r\n      args: targetAddress ? [targetAddress, BigInt(companyId)] : undefined,\r\n      query: {\r\n        enabled: !!targetAddress,\r\n      },\r\n    });\r\n  }, [contractAddress, address]);\r\n\r\n  // Write functions\r\n  const registerCompany = useCallback(\r\n    (name: string, initialPrice: string, totalSupply: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'registerCompany',\r\n        args: [name, parseEther(initialPrice), BigInt(totalSupply)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const buyShares = useCallback(\r\n    (companyId: number, amount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'buyShares',\r\n        args: [BigInt(companyId), BigInt(amount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const sellShares = useCallback(\r\n    (companyId: number, amount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'sellShares',\r\n        args: [BigInt(companyId), BigInt(amount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  return {\r\n    // Contract data\r\n    contractAddress,\r\n    nextCompanyId: nextCompanyId ? Number(nextCompanyId) : 0,\r\n    \r\n    // Read functions\r\n    getCompany,\r\n    getSharePrice,\r\n    getShareBalance,\r\n    \r\n    // Write functions\r\n    registerCompany,\r\n    buyShares,\r\n    sellShares,\r\n    \r\n    // Transaction state\r\n    hash,\r\n    isPending,\r\n    isConfirming,\r\n    isConfirmed,\r\n    error,\r\n  };\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock/apps/web/components/CompanyRegistry.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\nimport { useDeStock } from '@/lib/hooks/useDeStock';\r\nimport { useDSTK } from '@/lib/hooks/useDSTK';\r\nimport { useAccount } from 'wagmi';\r\nimport { REGISTRATION_FEE } from '@/lib/contracts';\r\nimport { formatUnits } from 'viem';\r\n\r\nconst schema = z.object({\r\n  name: z.string().min(1, 'Company name is required').max(50, 'Name too long'),\r\n  initialPrice: z.string().min(1, 'Initial price is required'),\r\n  totalSupply: z.string().min(1, 'Total supply is required'),\r\n});\r\n\r\ntype FormData = z.infer<typeof schema>;\r\n\r\nexport function CompanyRegistry() {\r\n  const { isConnected, address } = useAccount();\r\n  const { registerCompany, isPending, isConfirming, isConfirmed, error } = useDeStock();\r\n  const { balance, approve, getAllowance } = useDSTK();\r\n  const [needsApproval, setNeedsApproval] = useState(true);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    watch,\r\n  } = useForm<FormData>({\r\n    resolver: zodResolver(schema),\r\n  });\r\n\r\n  const watchedValues = watch();\r\n  const estimatedCost = watchedValues.initialPrice && watchedValues.totalSupply \r\n    ? (parseFloat(watchedValues.initialPrice) * parseFloat(watchedValues.totalSupply) + 100).toString()\r\n    : '100';\r\n\r\n  const checkApproval = async () => {\r\n    if (!isConnected || !address) return;\r\n    \r\n    // Check if user has enough balance\r\n    const userBalance = parseFloat(balance);\r\n    const requiredBalance = parseFloat(estimatedCost);\r\n    \r\n    if (userBalance < requiredBalance) {\r\n      setNeedsApproval(true);\r\n      return;\r\n    }\r\n\r\n    // Check allowance (this would need to be implemented properly with contract address)\r\n    setNeedsApproval(false);\r\n  };\r\n\r\n  const handleApprove = async () => {\r\n    if (!address) return;\r\n    \r\n    // This would need the DeStock contract address\r\n    // approve(destockContractAddress, estimatedCost);\r\n  };\r\n\r\n  const onSubmit = async (data: FormData) => {\r\n    if (!isConnected) {\r\n      alert('Please connect your wallet first');\r\n      return;\r\n    }\r\n\r\n    const userBalance = parseFloat(balance);\r\n    if (userBalance < 100) {\r\n      alert('Insufficient DSTK balance. You need at least 100 DSTK to register a company.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await registerCompany(data.name, data.initialPrice, data.totalSupply);\r\n      reset();\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n    }\r\n  };\r\n\r\n  if (!isConnected) {\r\n    return (\r\n      <div className=\"destock-card text-center py-8\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n          Connect Your Wallet\r\n        </h3>\r\n        <p className=\"text-gray-600\">\r\n          Please connect your wallet to register a company.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"destock-card\">\r\n      <div className=\"p-6\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-6\">\r\n          Register Your Company\r\n        </h3>\r\n        \r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n          <div>\r\n            <label className=\"destock-label\" htmlFor=\"name\">\r\n              Company Name\r\n            </label>\r\n            <input\r\n              {...register('name')}\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"destock-input\"\r\n              placeholder=\"Enter company name\"\r\n            />\r\n            {errors.name && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.name.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"destock-label\" htmlFor=\"initialPrice\">\r\n              Initial Share Price (DSTK)\r\n            </label>\r\n            <input\r\n              {...register('initialPrice')}\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              min=\"0.01\"\r\n              id=\"initialPrice\"\r\n              className=\"destock-input\"\r\n              placeholder=\"10.00\"\r\n            />\r\n            {errors.initialPrice && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.initialPrice.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"destock-label\" htmlFor=\"totalSupply\">\r\n              Total Share Supply\r\n            </label>\r\n            <input\r\n              {...register('totalSupply')}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              id=\"totalSupply\"\r\n              className=\"destock-input\"\r\n              placeholder=\"1000\"\r\n            />\r\n            {errors.totalSupply && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.totalSupply.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n            <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Cost Breakdown</h4>\r\n            <div className=\"space-y-1 text-sm text-gray-600\">\r\n              <div className=\"flex justify-between\">\r\n                <span>Registration Fee:</span>\r\n                <span>100 DSTK</span>\r\n              </div>\r\n              {watchedValues.initialPrice && watchedValues.totalSupply && (\r\n                <div className=\"flex justify-between\">\r\n                  <span>Initial Liquidity:</span>\r\n                  <span>\r\n                    {(parseFloat(watchedValues.initialPrice) * parseFloat(watchedValues.totalSupply)).toFixed(2)} DSTK\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <div className=\"flex justify-between font-medium border-t pt-1\">\r\n                <span>Total Cost:</span>\r\n                <span>{estimatedCost} DSTK</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-xs text-gray-500\">\r\n              Your Balance: {balance} DSTK\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"bg-red-50 p-4 rounded-lg\">\r\n              <p className=\"text-sm text-red-800\">\r\n                Registration failed: {error.message}\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isPending || isConfirming || parseFloat(balance) < parseFloat(estimatedCost)}\r\n            className=\"w-full destock-button-primary disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {isPending || isConfirming\r\n              ? 'Processing...'\r\n              : parseFloat(balance) < parseFloat(estimatedCost)\r\n              ? 'Insufficient Balance'\r\n              : 'Register Company'}\r\n          </button>\r\n\r\n          {isConfirmed && (\r\n            <div className=\"bg-green-50 p-4 rounded-lg\">\r\n              <p className=\"text-sm text-green-800\">\r\n                Company registered successfully! 🎉\r\n              </p>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}