{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/components/OrderBook.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useWebSocket } from '../lib/providers/WebSocketProvider';\r\nimport { AlertTriangle, RefreshCw, Wifi, WifiOff } from 'lucide-react';\r\n\r\ninterface OrderBookProps {\r\n  companyId: number;\r\n  height?: number;\r\n}\r\n\r\nexport default function OrderBook({ companyId, height = 400 }: OrderBookProps) {\r\n  const { orderBooks, subscribe, unsubscribe, connectionStatus, error, reconnect } = useWebSocket();\r\n  const [spread, setSpread] = useState<number>(0);\r\n  const [spreadPercentage, setSpreadPercentage] = useState<number>(0);\r\n  const [loadingTimeout, setLoadingTimeout] = useState(false);\r\n\r\n  const orderBookData = orderBooks.get(companyId);\r\n\r\n  useEffect(() => {\r\n    if (connectionStatus !== 'disabled') {\r\n      subscribe(companyId);\r\n    }\r\n    return () => unsubscribe(companyId);\r\n  }, [companyId, subscribe, unsubscribe, connectionStatus]);\r\n\r\n  // Set loading timeout\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setLoadingTimeout(true);\r\n    }, 5000); // 5 second timeout\r\n    \r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  // Reset timeout when data loads\r\n  useEffect(() => {\r\n    if (orderBookData) {\r\n      setLoadingTimeout(false);\r\n    }\r\n  }, [orderBookData]);\r\n\r\n  useEffect(() => {\r\n    if (orderBookData?.asks.length && orderBookData?.bids.length) {\r\n      const bestAsk = Math.min(...orderBookData.asks.map(a => a.price));\r\n      const bestBid = Math.max(...orderBookData.bids.map(b => b.price));\r\n      const currentSpread = bestAsk - bestBid;\r\n      const midPrice = (bestAsk + bestBid) / 2;\r\n      \r\n      setSpread(currentSpread);\r\n      setSpreadPercentage(midPrice > 0 ? (currentSpread / midPrice) * 100 : 0);\r\n    }\r\n  }, [orderBookData]);\r\n\r\n  const formatPrice = (price: number) => price.toFixed(4);\r\n  const formatAmount = (amount: number) => amount.toLocaleString();\r\n\r\n  // Helper function to get connection status indicator\r\n  const getConnectionStatusIndicator = () => {\r\n    const statusColors = {\r\n      connected: 'bg-green-500',\r\n      connecting: 'bg-yellow-500 animate-pulse',\r\n      disconnected: 'bg-gray-500',\r\n      error: 'bg-red-500',\r\n      disabled: 'bg-gray-400'\r\n    };\r\n    \r\n    const statusLabels = {\r\n      connected: 'Live',\r\n      connecting: 'Connecting',\r\n      disconnected: 'Disconnected',\r\n      error: 'Error',\r\n      disabled: 'Disabled'\r\n    };\r\n    \r\n    return {\r\n      color: statusColors[connectionStatus] || 'bg-gray-400',\r\n      label: statusLabels[connectionStatus] || 'Unknown'\r\n    };\r\n  };\r\n\r\n  // Error state\r\n  if (connectionStatus === 'error' || (loadingTimeout && !orderBookData)) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Order Book</h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center\" style={{ height: height - 60 }}>\r\n          <div className=\"text-center max-w-sm\">\r\n            <AlertTriangle className=\"w-12 h-12 text-orange-500 mx-auto mb-4\" />\r\n            <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              Order Book Unavailable\r\n            </h4>\r\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\r\n              {error || 'Unable to connect to real-time market data. Trading services may be offline.'}\r\n            </p>\r\n            <button\r\n              onClick={reconnect}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n            >\r\n              <RefreshCw className=\"w-4 h-4 inline mr-2\" />\r\n              Retry Connection\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Disabled state\r\n  if (connectionStatus === 'disabled') {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Order Book</h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center\" style={{ height: height - 60 }}>\r\n          <div className=\"text-center\">\r\n            <WifiOff className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n            <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              Real-time Data Disabled\r\n            </h4>\r\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\r\n              Order book requires WebSocket connection to display live data\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Loading state\r\n  if (connectionStatus === 'connecting' || (!orderBookData && !loadingTimeout)) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Order Book</h3>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              <span className=\"inline-flex items-center\">\r\n                <div className=\"w-2 h-2 rounded-full mr-2 bg-yellow-500 animate-pulse\"></div>\r\n                Connecting\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center justify-center\" style={{ height: height - 60 }}>\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4\"></div>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">Loading order book...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // No data state (connected but no order book data)\r\n  if (!orderBookData) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Order Book</h3>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              <span className=\"inline-flex items-center\">\r\n                <div className=\"w-2 h-2 rounded-full mr-2 bg-green-500\"></div>\r\n                Connected\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center justify-center\" style={{ height: height - 60 }}>\r\n          <div className=\"text-center\">\r\n            <div className=\"w-12 h-12 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center mx-auto mb-4\">\r\n              <Wifi className=\"w-6 h-6 text-gray-400\" />\r\n            </div>\r\n            <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              No Orders Available\r\n            </h4>\r\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\r\n              Waiting for order book data for this company\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const maxTotal = Math.max(\r\n    ...orderBookData.bids.map(b => b.total),\r\n    ...orderBookData.asks.map(a => a.total)\r\n  );\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Order Book</h3>\r\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            <span className=\"inline-flex items-center\">\r\n              <div className={`w-2 h-2 rounded-full mr-2 ${getConnectionStatusIndicator().color}`}></div>\r\n              {getConnectionStatusIndicator().label}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        {spread > 0 && (\r\n          <div className=\"mt-2 flex items-center gap-4 text-sm\">\r\n            <span className=\"text-gray-600 dark:text-gray-400\">\r\n              Spread: <span className=\"text-gray-900 dark:text-white font-medium\">{formatPrice(spread)}</span>\r\n            </span>\r\n            <span className=\"text-gray-600 dark:text-gray-400\">\r\n              (<span className=\"text-gray-900 dark:text-white font-medium\">{spreadPercentage.toFixed(2)}%</span>)\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"p-4\">\r\n        {/* Header */}\r\n        <div className=\"grid grid-cols-3 gap-4 text-sm font-medium text-gray-600 dark:text-gray-400 mb-3\">\r\n          <div className=\"text-right\">Price</div>\r\n          <div className=\"text-right\">Amount</div>\r\n          <div className=\"text-right\">Total</div>\r\n        </div>\r\n\r\n        <div className=\"space-y-1\" style={{ height: height - 120, overflowY: 'auto' }}>\r\n          {/* Asks (Sell Orders) */}\r\n          <div className=\"space-y-1\">\r\n            {orderBookData.asks\r\n              .sort((a, b) => b.price - a.price)\r\n              .slice(0, 10)\r\n              .map((ask, index) => (\r\n                <div key={`ask-${index}`} className=\"relative\">\r\n                  <div\r\n                    className=\"absolute inset-0 bg-red-50 dark:bg-red-900/20\"\r\n                    style={{\r\n                      width: `${maxTotal > 0 ? (ask.total / maxTotal) * 100 : 0}%`,\r\n                      right: 0,\r\n                    }}\r\n                  ></div>\r\n                  <div className=\"relative grid grid-cols-3 gap-4 text-sm py-1 px-2\">\r\n                    <div className=\"text-right text-red-600 dark:text-red-400 font-medium\">\r\n                      {formatPrice(ask.price)}\r\n                    </div>\r\n                    <div className=\"text-right text-gray-900 dark:text-white\">\r\n                      {formatAmount(ask.amount)}\r\n                    </div>\r\n                    <div className=\"text-right text-gray-600 dark:text-gray-400\">\r\n                      {formatAmount(ask.total)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          {/* Spread indicator */}\r\n          {spread > 0 && (\r\n            <div className=\"my-4 py-2 px-3 bg-gray-50 dark:bg-gray-700/50 rounded text-center\">\r\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Spread: {formatPrice(spread)} ({spreadPercentage.toFixed(2)}%)\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {/* Bids (Buy Orders) */}\r\n          <div className=\"space-y-1\">\r\n            {orderBookData.bids\r\n              .sort((a, b) => b.price - a.price)\r\n              .slice(0, 10)\r\n              .map((bid, index) => (\r\n                <div key={`bid-${index}`} className=\"relative\">\r\n                  <div\r\n                    className=\"absolute inset-0 bg-green-50 dark:bg-green-900/20\"\r\n                    style={{\r\n                      width: `${maxTotal > 0 ? (bid.total / maxTotal) * 100 : 0}%`,\r\n                      right: 0,\r\n                    }}\r\n                  ></div>\r\n                  <div className=\"relative grid grid-cols-3 gap-4 text-sm py-1 px-2\">\r\n                    <div className=\"text-right text-green-600 dark:text-green-400 font-medium\">\r\n                      {formatPrice(bid.price)}\r\n                    </div>\r\n                    <div className=\"text-right text-gray-900 dark:text-white\">\r\n                      {formatAmount(bid.amount)}\r\n                    </div>\r\n                    <div className=\"text-right text-gray-600 dark:text-gray-400\">\r\n                      {formatAmount(bid.total)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/components/DepthChart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useWebSocket } from '../lib/providers/WebSocketProvider';\r\nimport { AlertTriangle, RefreshCw, WifiOff, TrendingUp } from 'lucide-react';\r\n\r\ninterface DepthChartProps {\r\n  companyId: number;\r\n  height?: number;\r\n}\r\n\r\ninterface ChartData {\r\n  price: number;\r\n  cumulativeAmount: number;\r\n  side: 'bid' | 'ask';\r\n}\r\n\r\nexport default function DepthChart({ companyId, height = 300 }: DepthChartProps) {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const { orderBooks, subscribe, unsubscribe, connectionStatus, error, reconnect } = useWebSocket();\r\n  const [chartData, setChartData] = useState<{ bids: ChartData[]; asks: ChartData[] }>({ bids: [], asks: [] });\r\n  const [loadingTimeout, setLoadingTimeout] = useState(false);\r\n\r\n  const orderBookData = orderBooks.get(companyId);\r\n\r\n  useEffect(() => {\r\n    if (connectionStatus !== 'disabled') {\r\n      subscribe(companyId);\r\n    }\r\n    return () => unsubscribe(companyId);\r\n  }, [companyId, subscribe, unsubscribe, connectionStatus]);\r\n\r\n  // Set loading timeout\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setLoadingTimeout(true);\r\n    }, 5000); // 5 second timeout\r\n    \r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  // Reset timeout when data loads\r\n  useEffect(() => {\r\n    if (orderBookData) {\r\n      setLoadingTimeout(false);\r\n    }\r\n  }, [orderBookData]);\r\n\r\n  useEffect(() => {\r\n    if (!orderBookData) return;\r\n\r\n    // Process bids (buy orders)\r\n    const sortedBids = [...orderBookData.bids].sort((a, b) => b.price - a.price);\r\n    let cumulativeBid = 0;\r\n    const bidData: ChartData[] = sortedBids.map(bid => {\r\n      cumulativeBid += bid.amount;\r\n      return {\r\n        price: bid.price,\r\n        cumulativeAmount: cumulativeBid,\r\n        side: 'bid' as const\r\n      };\r\n    });\r\n\r\n    // Process asks (sell orders)\r\n    const sortedAsks = [...orderBookData.asks].sort((a, b) => a.price - b.price);\r\n    let cumulativeAsk = 0;\r\n    const askData: ChartData[] = sortedAsks.map(ask => {\r\n      cumulativeAsk += ask.amount;\r\n      return {\r\n        price: ask.price,\r\n        cumulativeAmount: cumulativeAsk,\r\n        side: 'ask' as const\r\n      };\r\n    });\r\n\r\n    setChartData({ bids: bidData, asks: askData });\r\n  }, [orderBookData]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas || chartData.bids.length === 0 || chartData.asks.length === 0) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    const dpr = window.devicePixelRatio || 1;\r\n    const rect = canvas.getBoundingClientRect();\r\n    \r\n    canvas.width = rect.width * dpr;\r\n    canvas.height = rect.height * dpr;\r\n    \r\n    ctx.scale(dpr, dpr);\r\n    canvas.style.width = rect.width + 'px';\r\n    canvas.style.height = rect.height + 'px';\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, rect.width, rect.height);\r\n\r\n    // Calculate bounds\r\n    const allData = [...chartData.bids, ...chartData.asks];\r\n    const minPrice = Math.min(...allData.map(d => d.price));\r\n    const maxPrice = Math.max(...allData.map(d => d.price));\r\n    const maxAmount = Math.max(...allData.map(d => d.cumulativeAmount));\r\n\r\n    const padding = 40;\r\n    const chartWidth = rect.width - 2 * padding;\r\n    const chartHeight = rect.height - 2 * padding;\r\n\r\n    // Helper functions\r\n    const scaleX = (price: number) => padding + ((price - minPrice) / (maxPrice - minPrice)) * chartWidth;\r\n    const scaleY = (amount: number) => rect.height - padding - (amount / maxAmount) * chartHeight;\r\n\r\n    // Draw grid\r\n    ctx.strokeStyle = '#e5e7eb';\r\n    ctx.lineWidth = 1;\r\n    \r\n    // Vertical grid lines\r\n    for (let i = 0; i <= 5; i++) {\r\n      const x = padding + (i / 5) * chartWidth;\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, padding);\r\n      ctx.lineTo(x, rect.height - padding);\r\n      ctx.stroke();\r\n    }\r\n    \r\n    // Horizontal grid lines\r\n    for (let i = 0; i <= 5; i++) {\r\n      const y = padding + (i / 5) * chartHeight;\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding, y);\r\n      ctx.lineTo(rect.width - padding, y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw bid area (green)\r\n    if (chartData.bids.length > 0) {\r\n      ctx.fillStyle = 'rgba(34, 197, 94, 0.2)';\r\n      ctx.strokeStyle = '#22c55e';\r\n      ctx.lineWidth = 2;\r\n      \r\n      ctx.beginPath();\r\n      ctx.moveTo(scaleX(chartData.bids[0].price), scaleY(0));\r\n      \r\n      chartData.bids.forEach((bid, i) => {\r\n        const x = scaleX(bid.price);\r\n        const y = scaleY(bid.cumulativeAmount);\r\n        \r\n        if (i === 0) {\r\n          ctx.lineTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, scaleY(chartData.bids[i - 1].cumulativeAmount));\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      \r\n      const lastBid = chartData.bids[chartData.bids.length - 1];\r\n      ctx.lineTo(scaleX(lastBid.price), scaleY(0));\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      \r\n      // Draw bid line\r\n      ctx.beginPath();\r\n      ctx.moveTo(scaleX(chartData.bids[0].price), scaleY(chartData.bids[0].cumulativeAmount));\r\n      chartData.bids.forEach((bid, i) => {\r\n        if (i > 0) {\r\n          const x = scaleX(bid.price);\r\n          const y = scaleY(bid.cumulativeAmount);\r\n          ctx.lineTo(x, scaleY(chartData.bids[i - 1].cumulativeAmount));\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw ask area (red)\r\n    if (chartData.asks.length > 0) {\r\n      ctx.fillStyle = 'rgba(239, 68, 68, 0.2)';\r\n      ctx.strokeStyle = '#ef4444';\r\n      ctx.lineWidth = 2;\r\n      \r\n      ctx.beginPath();\r\n      ctx.moveTo(scaleX(chartData.asks[0].price), scaleY(0));\r\n      \r\n      chartData.asks.forEach((ask, i) => {\r\n        const x = scaleX(ask.price);\r\n        const y = scaleY(ask.cumulativeAmount);\r\n        \r\n        if (i === 0) {\r\n          ctx.lineTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, scaleY(chartData.asks[i - 1].cumulativeAmount));\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      \r\n      const lastAsk = chartData.asks[chartData.asks.length - 1];\r\n      ctx.lineTo(scaleX(lastAsk.price), scaleY(0));\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      \r\n      // Draw ask line\r\n      ctx.beginPath();\r\n      ctx.moveTo(scaleX(chartData.asks[0].price), scaleY(chartData.asks[0].cumulativeAmount));\r\n      chartData.asks.forEach((ask, i) => {\r\n        if (i > 0) {\r\n          const x = scaleX(ask.price);\r\n          const y = scaleY(ask.cumulativeAmount);\r\n          ctx.lineTo(x, scaleY(chartData.asks[i - 1].cumulativeAmount));\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw axes labels\r\n    ctx.fillStyle = '#6b7280';\r\n    ctx.font = '12px sans-serif';\r\n    ctx.textAlign = 'center';\r\n    \r\n    // X-axis labels (prices)\r\n    for (let i = 0; i <= 5; i++) {\r\n      const price = minPrice + (i / 5) * (maxPrice - minPrice);\r\n      const x = padding + (i / 5) * chartWidth;\r\n      ctx.fillText(price.toFixed(4), x, rect.height - 10);\r\n    }\r\n    \r\n    // Y-axis labels (amounts)\r\n    ctx.textAlign = 'right';\r\n    for (let i = 0; i <= 5; i++) {\r\n      const amount = (i / 5) * maxAmount;\r\n      const y = rect.height - padding - (i / 5) * chartHeight + 4;\r\n      ctx.fillText(amount.toLocaleString(), padding - 10, y);\r\n    }\r\n\r\n  }, [chartData]);\r\n\r\n  // Helper function to get connection status indicator  \r\n  const getConnectionStatusIndicator = () => {\r\n    const statusColors = {\r\n      connected: 'bg-green-500',\r\n      connecting: 'bg-yellow-500 animate-pulse',\r\n      disconnected: 'bg-gray-500',\r\n      error: 'bg-red-500',\r\n      disabled: 'bg-gray-400'\r\n    };\r\n    \r\n    const statusLabels = {\r\n      connected: 'Live',\r\n      connecting: 'Connecting',\r\n      disconnected: 'Disconnected',\r\n      error: 'Error',\r\n      disabled: 'Disabled'\r\n    };\r\n    \r\n    return {\r\n      color: statusColors[connectionStatus] || 'bg-gray-400',\r\n      label: statusLabels[connectionStatus] || 'Unknown'\r\n    };\r\n  };\r\n\r\n  // Error state\r\n  if (connectionStatus === 'error' || (loadingTimeout && !orderBookData)) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Market Depth</h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center\" style={{ height: height - 60 }}>\r\n          <div className=\"text-center max-w-sm\">\r\n            <AlertTriangle className=\"w-12 h-12 text-orange-500 mx-auto mb-4\" />\r\n            <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              Chart Unavailable\r\n            </h4>\r\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\r\n              {error || 'Unable to load market depth chart. Real-time data connection failed.'}\r\n            </p>\r\n            <button\r\n              onClick={reconnect}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n            >\r\n              <RefreshCw className=\"w-4 h-4 inline mr-2\" />\r\n              Retry Connection\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Disabled state\r\n  if (connectionStatus === 'disabled') {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Market Depth</h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center\" style={{ height: height - 60 }}>\r\n          <div className=\"text-center\">\r\n            <WifiOff className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n            <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              Real-time Data Disabled\r\n            </h4>\r\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\r\n              Market depth chart requires WebSocket connection\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Loading state\r\n  if (connectionStatus === 'connecting' || (!orderBookData && !loadingTimeout)) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Market Depth</h3>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              <span className=\"inline-flex items-center\">\r\n                <div className=\"w-2 h-2 rounded-full mr-2 bg-yellow-500 animate-pulse\"></div>\r\n                Connecting\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center justify-center\" style={{ height: height - 60 }}>\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-500 mx-auto mb-2\"></div>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Loading depth chart...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // No data state\r\n  if (!orderBookData || chartData.bids.length === 0 || chartData.asks.length === 0) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Market Depth</h3>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              <span className=\"inline-flex items-center\">\r\n                <div className=\"w-2 h-2 rounded-full mr-2 bg-green-500\"></div>\r\n                Connected\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center justify-center\" style={{ height: height - 60 }}>\r\n          <div className=\"text-center\">\r\n            <div className=\"w-12 h-12 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center mx-auto mb-4\">\r\n              <TrendingUp className=\"w-6 h-6 text-gray-400\" />\r\n            </div>\r\n            <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              No Market Depth\r\n            </h4>\r\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\r\n              Waiting for order book data to generate depth chart\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Market Depth</h3>\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"flex items-center gap-4 text-sm\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"w-3 h-3 bg-green-500 rounded\"></div>\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Bids</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"w-3 h-3 bg-red-500 rounded\"></div>\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Asks</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              <span className=\"inline-flex items-center\">\r\n                <div className={`w-2 h-2 rounded-full mr-2 ${getConnectionStatusIndicator().color}`}></div>\r\n                {getConnectionStatusIndicator().label}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"p-4\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          className=\"w-full\"\r\n          style={{ height: height - 80 }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1508, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/lib/hooks/useDeStock.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract, useWaitForTransactionReceipt } from 'wagmi';\r\nimport { DESTOCK_ABI, getContractAddress } from '../contracts';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { Address, parseEther } from 'viem';\r\n\r\nexport function useDeStock() {\r\n  const { address, chainId } = useAccount();\r\n  \r\n  const contractAddress = useMemo(() => {\r\n    if (!chainId) return undefined;\r\n    return getContractAddress('DESTOCK', chainId);\r\n  }, [chainId]);\r\n\r\n  const { writeContract, data: hash, error, isPending } = useWriteContract();\r\n  const { isLoading: isConfirming, isSuccess: isConfirmed } = useWaitForTransactionReceipt({\r\n    hash,\r\n  });\r\n\r\n  // Read functions\r\n  const { data: nextCompanyId } = useReadContract({\r\n    address: contractAddress,\r\n    abi: DESTOCK_ABI,\r\n    functionName: 'nextCompanyId',\r\n  });\r\n\r\n  // Note: These functions return hook configurations, not hook calls\r\n  // They should be used in components that call the actual hooks\r\n  const getCompany = useCallback((companyId: number) => {\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'companies' as const,\r\n      args: [BigInt(companyId)],\r\n    };\r\n  }, [contractAddress]);\r\n\r\n  const getSharePrice = useCallback((companyId: number) => {\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getSharePrice' as const,\r\n      args: [BigInt(companyId)],\r\n    };\r\n  }, [contractAddress]);\r\n\r\n  const getShareBalance = useCallback((companyId: number, userAddress?: Address) => {\r\n    const targetAddress = userAddress || address;\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'balanceOf' as const,\r\n      args: targetAddress ? [targetAddress, BigInt(companyId)] : undefined,\r\n      query: {\r\n        enabled: !!targetAddress,\r\n      },\r\n    };\r\n  }, [contractAddress, address]);\r\n\r\n  const getLPTokenBalance = useCallback((companyId: number, userAddress?: Address) => {\r\n    const targetAddress = userAddress || address;\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getLPTokenBalance' as const,\r\n      args: targetAddress ? [targetAddress, BigInt(companyId)] : undefined,\r\n      query: {\r\n        enabled: !!targetAddress,\r\n      },\r\n    };\r\n  }, [contractAddress, address]);\r\n\r\n  const getUserOrders = useCallback((userAddress?: Address) => {\r\n    const targetAddress = userAddress || address;\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getUserOrders' as const,\r\n      args: targetAddress ? [targetAddress] : undefined,\r\n      query: {\r\n        enabled: !!targetAddress,\r\n      },\r\n    };\r\n  }, [contractAddress, address]);\r\n\r\n  const getOrderDetails = useCallback((orderId: number) => {\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getOrderDetails' as const,\r\n      args: [BigInt(orderId)],\r\n    };\r\n  }, [contractAddress]);\r\n\r\n  const getBuyPrice = useCallback((companyId: number, amount: string) => {\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getBuyPrice' as const,\r\n      args: [BigInt(companyId), BigInt(amount)],\r\n    };\r\n  }, [contractAddress]);\r\n\r\n  const getSellPrice = useCallback((companyId: number, amount: string) => {\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getSellPrice' as const,\r\n      args: [BigInt(companyId), BigInt(amount)],\r\n    };\r\n  }, [contractAddress]);\r\n\r\n  const getTradingVolume = useCallback((companyId: number) => {\r\n    return {\r\n      address: contractAddress,\r\n      abi: DESTOCK_ABI,\r\n      functionName: 'getTradingVolume' as const,\r\n      args: [BigInt(companyId)],\r\n    };\r\n  }, [contractAddress]);\r\n\r\n  // Write functions\r\n  const registerCompany = useCallback(\r\n    (name: string, totalSupply: string, initialPrice: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      // Calculate initial liquidity as totalSupply * initialPrice\r\n      const totalSupplyBigInt = BigInt(totalSupply);\r\n      const initialPriceBigInt = parseEther(initialPrice);\r\n      const initialLiquidity = totalSupplyBigInt * initialPriceBigInt;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'registerCompany',\r\n        args: [name, totalSupplyBigInt, initialLiquidity],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const buyShares = useCallback(\r\n    (companyId: number, amount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'buyShares',\r\n        args: [BigInt(companyId), BigInt(amount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const sellShares = useCallback(\r\n    (companyId: number, amount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'sellShares',\r\n        args: [BigInt(companyId), BigInt(amount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const addLiquidity = useCallback(\r\n    (companyId: number, tokenAmount: string, shareAmount: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'addLiquidity',\r\n        args: [BigInt(companyId), parseEther(tokenAmount), BigInt(shareAmount)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const removeLiquidity = useCallback(\r\n    (companyId: number, lpTokens: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'removeLiquidity',\r\n        args: [BigInt(companyId), BigInt(lpTokens)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const placeOrder = useCallback(\r\n    (companyId: number, isBuy: boolean, amount: string, price: string) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'placeOrder',\r\n        args: [BigInt(companyId), isBuy, BigInt(amount), parseEther(price)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  const cancelOrder = useCallback(\r\n    (orderId: number) => {\r\n      if (!contractAddress) return;\r\n      \r\n      writeContract({\r\n        address: contractAddress,\r\n        abi: DESTOCK_ABI,\r\n        functionName: 'cancelOrder',\r\n        args: [BigInt(orderId)],\r\n      });\r\n    },\r\n    [contractAddress, writeContract]\r\n  );\r\n\r\n  return {\r\n    // Contract data\r\n    contractAddress,\r\n    nextCompanyId: nextCompanyId ? Number(nextCompanyId) : 0,\r\n    \r\n    // Read functions\r\n    getCompany,\r\n    getSharePrice,\r\n    getShareBalance,\r\n    getLPTokenBalance,\r\n    getUserOrders,\r\n    getOrderDetails,\r\n    getBuyPrice,\r\n    getSellPrice,\r\n    getTradingVolume,\r\n    \r\n    // Write functions\r\n    registerCompany,\r\n    buyShares,\r\n    sellShares,\r\n    addLiquidity,\r\n    removeLiquidity,\r\n    placeOrder,\r\n    cancelOrder,\r\n    \r\n    // Transaction state\r\n    hash,\r\n    isPending,\r\n    isConfirming,\r\n    isConfirmed,\r\n    error,\r\n  };\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1820, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/components/TradingForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useAccount } from 'wagmi';\r\nimport { useDeStock } from '../lib/hooks/useDeStock';\r\nimport { useDSTK } from '../lib/hooks/useDSTK';\r\nimport { handleFaucetRequest, type FaucetRequestOptions } from '../lib/utils/faucetUtils';\r\nimport { GiftIcon } from 'lucide-react';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface TradingFormProps {\r\n  companyId: number;\r\n  currentPrice?: number;\r\n}\r\n\r\ntype OrderType = 'market' | 'limit';\r\ntype OrderSide = 'buy' | 'sell';\r\n\r\nexport default function TradingForm({ companyId, currentPrice = 0 }: TradingFormProps) {\r\n  const { address, chain } = useAccount();\r\n  const { buyShares, sellShares, placeOrder, isPending, isConfirming, isConfirmed, error, contractAddress } = useDeStock();\r\n  const { balance, refetchBalance, approve } = useDSTK();\r\n  const queryClient = useQueryClient();\r\n  \r\n  const [orderSide, setOrderSide] = useState<OrderSide>('buy');\r\n  const [orderType, setOrderType] = useState<OrderType>('market');\r\n  const [amount, setAmount] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [total, setTotal] = useState('');\r\n  const [isFaucetLoading, setIsFaucetLoading] = useState(false);\r\n  const [needsApproval, setNeedsApproval] = useState(false);\r\n  const [isApproving, setIsApproving] = useState(false);\r\n\r\n  // Get current allowance for DeStock contract\r\n  // TODO: Fix allowance checking after hook refactor\r\n  const currentAllowance = 0;\r\n\r\n  // Check if approval is needed for buy orders\r\n  const checkApproval = () => {\r\n    if (orderSide !== 'buy' || !total || !contractAddress) {\r\n      setNeedsApproval(false);\r\n      return;\r\n    }\r\n    \r\n    const totalCost = parseFloat(total) || 0;\r\n    const sufficient = currentAllowance >= totalCost;\r\n    setNeedsApproval(!sufficient);\r\n  };\r\n\r\n  // Check approval whenever values change\r\n  useEffect(() => {\r\n    checkApproval();\r\n  }, [orderSide, total, currentAllowance, contractAddress]);\r\n\r\n  const handleApprove = async () => {\r\n    if (!contractAddress || !total) return;\r\n    \r\n    setIsApproving(true);\r\n    try {\r\n      await approve(contractAddress, total);\r\n      toast.success('DSTK approval confirmed!');\r\n    } catch (error) {\r\n      console.error('Approval failed:', error);\r\n      toast.error('Approval failed. Please try again.');\r\n    } finally {\r\n      setIsApproving(false);\r\n    }\r\n  };\r\n\r\n  // Calculate total when amount or price changes\r\n  const handleAmountChange = (value: string) => {\r\n    setAmount(value);\r\n    if (orderType === 'limit' && price) {\r\n      const calculatedTotal = (parseFloat(value) || 0) * (parseFloat(price) || 0);\r\n      setTotal(calculatedTotal.toFixed(4));\r\n    } else if (orderType === 'market' && currentPrice) {\r\n      const calculatedTotal = (parseFloat(value) || 0) * currentPrice;\r\n      setTotal(calculatedTotal.toFixed(4));\r\n    }\r\n  };\r\n\r\n  const handlePriceChange = (value: string) => {\r\n    setPrice(value);\r\n    if (amount) {\r\n      const calculatedTotal = (parseFloat(amount) || 0) * (parseFloat(value) || 0);\r\n      setTotal(calculatedTotal.toFixed(4));\r\n    }\r\n  };\r\n\r\n  const handleTotalChange = (value: string) => {\r\n    setTotal(value);\r\n    if (orderType === 'limit' && price) {\r\n      const calculatedAmount = (parseFloat(value) || 0) / (parseFloat(price) || 0);\r\n      setAmount(calculatedAmount.toFixed(0));\r\n    } else if (orderType === 'market' && currentPrice) {\r\n      const calculatedAmount = (parseFloat(value) || 0) / currentPrice;\r\n      setAmount(calculatedAmount.toFixed(0));\r\n    }\r\n  };\r\n\r\n  const handleOrderTypeChange = (type: OrderType) => {\r\n    setOrderType(type);\r\n    if (type === 'market') {\r\n      setPrice(currentPrice.toString());\r\n      if (amount && currentPrice) {\r\n        const calculatedTotal = (parseFloat(amount) || 0) * currentPrice;\r\n        setTotal(calculatedTotal.toFixed(4));\r\n      }\r\n    } else {\r\n      setPrice('');\r\n    }\r\n  };\r\n\r\n  const handleFaucetClick = async () => {\r\n    if (!address || !chain?.id) return;\r\n    \r\n    const requestOptions: FaucetRequestOptions = {\r\n      address,\r\n      chainId: chain.id,\r\n      onSuccess: () => {\r\n        // On success, refetch balance\r\n        refetchBalance();\r\n      },\r\n      onError: (error) => {\r\n        // Error handling is already done in handleFaucetRequest\r\n        console.error('Faucet request failed:', error);\r\n      },\r\n      onLoading: setIsFaucetLoading\r\n    };\r\n\r\n    await handleFaucetRequest(requestOptions);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!address || !amount || (!price && orderType === 'limit')) {\r\n      return;\r\n    }\r\n\r\n    if (orderSide === 'buy' && needsApproval) {\r\n      toast.error('Please approve DSTK spending first.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (orderType === 'market') {\r\n        if (orderSide === 'buy') {\r\n          buyShares(companyId, amount);\r\n        } else {\r\n          sellShares(companyId, amount);\r\n        }\r\n      } else {\r\n        placeOrder(companyId, orderSide === 'buy', amount, price);\r\n      }\r\n    } catch (error) {\r\n      console.error('Trade failed:', error);\r\n      toast.error('Trade failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Reset form and refresh portfolio after successful trade\r\n  useEffect(() => {\r\n    if (isConfirmed) {\r\n      // Reset form\r\n      setAmount('');\r\n      setPrice('');\r\n      setTotal('');\r\n      \r\n      // Refresh portfolio data\r\n      queryClient.invalidateQueries({ queryKey: ['portfolio'] });\r\n      \r\n      // Show success message\r\n      toast.success('Trade executed successfully! 🎉');\r\n      \r\n      // Refresh balance\r\n      refetchBalance();\r\n    }\r\n  }, [isConfirmed, queryClient, refetchBalance]);\r\n\r\n  // Show error messages\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(`Transaction failed: ${error.message}`);\r\n    }\r\n  }, [error]);\r\n\r\n  const isFormValid = () => {\r\n    if (!address || !amount) return false;\r\n    if (orderType === 'limit' && !price) return false;\r\n    \r\n    // Check DSTK balance for buy orders\r\n    if (orderSide === 'buy') {\r\n      const totalCost = parseFloat(total) || 0;\r\n      const userBalance = parseFloat(balance) || 0;\r\n      if (totalCost > userBalance) return false;\r\n      if (needsApproval) return false; // Can't submit if approval is needed\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  const hasInsufficientBalance = () => {\r\n    if (!address || orderSide !== 'buy' || !total) return false;\r\n    const totalCost = parseFloat(total) || 0;\r\n    const userBalance = parseFloat(balance) || 0;\r\n    return totalCost > userBalance;\r\n  };\r\n\r\n  if (!address) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Place Order</h3>\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Connect your wallet to start trading</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Place Order</h3>\r\n        {currentPrice > 0 && (\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n            Current Price: {currentPrice.toFixed(4)} DSTK\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n        {/* Order Side */}\r\n        <div className=\"flex rounded-lg border border-gray-200 dark:border-gray-600 overflow-hidden\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setOrderSide('buy')}\r\n            className={`flex-1 py-3 px-4 text-sm font-medium transition-colors ${\r\n              orderSide === 'buy'\r\n                ? 'bg-green-600 text-white'\r\n                : 'bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600'\r\n            }`}\r\n          >\r\n            Buy\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setOrderSide('sell')}\r\n            className={`flex-1 py-3 px-4 text-sm font-medium transition-colors ${\r\n              orderSide === 'sell'\r\n                ? 'bg-red-600 text-white'\r\n                : 'bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600'\r\n            }`}\r\n          >\r\n            Sell\r\n          </button>\r\n        </div>\r\n\r\n        {/* Order Type */}\r\n        <div className=\"flex rounded-lg border border-gray-200 dark:border-gray-600 overflow-hidden\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => handleOrderTypeChange('market')}\r\n            className={`flex-1 py-2 px-4 text-sm font-medium transition-colors ${\r\n              orderType === 'market'\r\n                ? 'bg-blue-600 text-white'\r\n                : 'bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600'\r\n            }`}\r\n          >\r\n            Market\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => handleOrderTypeChange('limit')}\r\n            className={`flex-1 py-2 px-4 text-sm font-medium transition-colors ${\r\n              orderType === 'limit'\r\n                ? 'bg-blue-600 text-white'\r\n                : 'bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600'\r\n            }`}\r\n          >\r\n            Limit\r\n          </button>\r\n        </div>\r\n\r\n        {/* Amount Input */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Amount (Shares)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => handleAmountChange(e.target.value)}\r\n            placeholder=\"0\"\r\n            min=\"0\"\r\n            step=\"1\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        {/* Price Input (for limit orders) */}\r\n        {orderType === 'limit' && (\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Price (DSTK per share)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={price}\r\n              onChange={(e) => handlePriceChange(e.target.value)}\r\n              placeholder=\"0.0000\"\r\n              min=\"0\"\r\n              step=\"0.0001\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Total Input */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Total (DSTK)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={total}\r\n            onChange={(e) => handleTotalChange(e.target.value)}\r\n            placeholder=\"0.0000\"\r\n            min=\"0\"\r\n            step=\"0.0001\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        {/* Quick Amount Buttons */}\r\n        <div className=\"grid grid-cols-4 gap-2\">\r\n          {['25%', '50%', '75%', '100%'].map((percentage) => (\r\n            <button\r\n              key={percentage}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                // This would calculate based on available balance\r\n                // For now, just set example amounts\r\n                const amounts = { '25%': '25', '50%': '50', '75%': '75', '100%': '100' };\r\n                handleAmountChange(amounts[percentage as keyof typeof amounts]);\r\n              }}\r\n              className=\"py-2 px-3 text-xs font-medium text-gray-600 dark:text-gray-400 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\r\n            >\r\n              {percentage}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Approval Required Warning */}\r\n        {needsApproval && orderSide === 'buy' && !hasInsufficientBalance() && (\r\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"flex-1\">\r\n                <h4 className=\"text-sm font-medium text-blue-800 dark:text-blue-300\">\r\n                  Approval Required\r\n                </h4>\r\n                <p className=\"text-sm text-blue-700 dark:text-blue-400 mt-1\">\r\n                  You need to approve {total} DSTK spending for the DeStock contract. Current allowance: {currentAllowance.toFixed(4)} DSTK\r\n                </p>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleApprove}\r\n                  disabled={isApproving}\r\n                  className=\"mt-3 bg-blue-600 hover:bg-blue-700 disabled:opacity-50 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n                >\r\n                  {isApproving ? 'Approving...' : `Approve ${total} DSTK`}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Insufficient Balance Warning and Faucet Option */}\r\n        {hasInsufficientBalance() && (\r\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg className=\"w-5 h-5 text-yellow-600 dark:text-yellow-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"flex-1\">\r\n                <h4 className=\"text-sm font-medium text-yellow-800 dark:text-yellow-300\">\r\n                  Insufficient DSTK Balance\r\n                </h4>\r\n                <p className=\"text-sm text-yellow-700 dark:text-yellow-400 mt-1\">\r\n                  You need {total} DSTK but only have {balance} DSTK. Get test tokens to continue trading.\r\n                </p>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleFaucetClick}\r\n                  disabled={isFaucetLoading}\r\n                  className=\"mt-3 inline-flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 disabled:from-gray-400 disabled:to-gray-500 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200\"\r\n                >\r\n                  <GiftIcon className=\"w-4 h-4\" />\r\n                  <span>{isFaucetLoading ? 'Getting Tokens...' : 'Get Test Tokens'}</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!isFormValid() || isPending || isConfirming}\r\n          className={`w-full py-3 px-4 rounded-md font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed ${\r\n            orderSide === 'buy'\r\n              ? 'bg-green-600 hover:bg-green-700 text-white'\r\n              : 'bg-red-600 hover:bg-red-700 text-white'\r\n          }`}\r\n        >\r\n          {isPending || isConfirming ? (\r\n            <div className=\"flex items-center justify-center gap-2\">\r\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              {isPending ? 'Submitting...' : 'Confirming...'}\r\n            </div>\r\n          ) : needsApproval && orderSide === 'buy' ? (\r\n            'Approval Required'\r\n          ) : (\r\n            `${orderSide === 'buy' ? 'Buy' : 'Sell'} ${orderType === 'market' ? 'Market' : 'Limit'}`\r\n          )}\r\n        </button>\r\n\r\n        {/* Order Summary */}\r\n        {amount && (orderType === 'market' || price) && (\r\n          <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4 space-y-2\">\r\n            <h4 className=\"font-medium text-gray-900 dark:text-white\">Order Summary</h4>\r\n            <div className=\"text-sm space-y-1\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Side:</span>\r\n                <span className={`font-medium ${orderSide === 'buy' ? 'text-green-600' : 'text-red-600'}`}>\r\n                  {orderSide.toUpperCase()}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Type:</span>\r\n                <span className=\"text-gray-900 dark:text-white\">{orderType.toUpperCase()}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Amount:</span>\r\n                <span className=\"text-gray-900 dark:text-white\">{amount} shares</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Price:</span>\r\n                <span className=\"text-gray-900 dark:text-white\">\r\n                  {orderType === 'market' ? `${currentPrice.toFixed(4)} (Market)` : price} DSTK\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between border-t border-gray-200 dark:border-gray-600 pt-2\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Total:</span>\r\n                <span className=\"font-medium text-gray-900 dark:text-white\">{total} DSTK</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAmBe,SAAS,YAAY,EAAE,SAAS,EAAE,eAAe,CAAC,EAAoB;IACnF,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IACpC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,yIAAA,CAAA,aAAU,AAAD;IACrH,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,UAAO,AAAD;IACnD,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IAEjC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;IACtD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,6CAA6C;IAC7C,mDAAmD;IACnD,MAAM,mBAAmB;IAEzB,6CAA6C;IAC7C,MAAM,gBAAgB;QACpB,IAAI,cAAc,SAAS,CAAC,SAAS,CAAC,iBAAiB;YACrD,iBAAiB;YACjB;QACF;QAEA,MAAM,YAAY,WAAW,UAAU;QACvC,MAAM,aAAa,oBAAoB;QACvC,iBAAiB,CAAC;IACpB;IAEA,wCAAwC;IACxC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;QAAW;QAAO;QAAkB;KAAgB;IAExD,MAAM,gBAAgB;QACpB,IAAI,CAAC,mBAAmB,CAAC,OAAO;QAEhC,eAAe;QACf,IAAI;YACF,MAAM,QAAQ,iBAAiB;YAC/B,uJAAA,CAAA,UAAK,CAAC,OAAO,CAAC;QAChB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oBAAoB;YAClC,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,eAAe;QACjB;IACF;IAEA,+CAA+C;IAC/C,MAAM,qBAAqB,CAAC;QAC1B,UAAU;QACV,IAAI,cAAc,WAAW,OAAO;YAClC,MAAM,kBAAkB,CAAC,WAAW,UAAU,CAAC,IAAI,CAAC,WAAW,UAAU,CAAC;YAC1E,SAAS,gBAAgB,OAAO,CAAC;QACnC,OAAO,IAAI,cAAc,YAAY,cAAc;YACjD,MAAM,kBAAkB,CAAC,WAAW,UAAU,CAAC,IAAI;YACnD,SAAS,gBAAgB,OAAO,CAAC;QACnC;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,SAAS;QACT,IAAI,QAAQ;YACV,MAAM,kBAAkB,CAAC,WAAW,WAAW,CAAC,IAAI,CAAC,WAAW,UAAU,CAAC;YAC3E,SAAS,gBAAgB,OAAO,CAAC;QACnC;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,SAAS;QACT,IAAI,cAAc,WAAW,OAAO;YAClC,MAAM,mBAAmB,CAAC,WAAW,UAAU,CAAC,IAAI,CAAC,WAAW,UAAU,CAAC;YAC3E,UAAU,iBAAiB,OAAO,CAAC;QACrC,OAAO,IAAI,cAAc,YAAY,cAAc;YACjD,MAAM,mBAAmB,CAAC,WAAW,UAAU,CAAC,IAAI;YACpD,UAAU,iBAAiB,OAAO,CAAC;QACrC;IACF;IAEA,MAAM,wBAAwB,CAAC;QAC7B,aAAa;QACb,IAAI,SAAS,UAAU;YACrB,SAAS,aAAa,QAAQ;YAC9B,IAAI,UAAU,cAAc;gBAC1B,MAAM,kBAAkB,CAAC,WAAW,WAAW,CAAC,IAAI;gBACpD,SAAS,gBAAgB,OAAO,CAAC;YACnC;QACF,OAAO;YACL,SAAS;QACX;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI;QAE5B,MAAM,iBAAuC;YAC3C;YACA,SAAS,MAAM,EAAE;YACjB,WAAW;gBACT,8BAA8B;gBAC9B;YACF;YACA,SAAS,CAAC;gBACR,wDAAwD;gBACxD,QAAQ,KAAK,CAAC,0BAA0B;YAC1C;YACA,WAAW;QACb;QAEA,MAAM,CAAA,GAAA,0IAAA,CAAA,sBAAmB,AAAD,EAAE;IAC5B;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAEhB,IAAI,CAAC,WAAW,CAAC,UAAW,CAAC,SAAS,cAAc,SAAU;YAC5D;QACF;QAEA,IAAI,cAAc,SAAS,eAAe;YACxC,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,IAAI;YACF,IAAI,cAAc,UAAU;gBAC1B,IAAI,cAAc,OAAO;oBACvB,UAAU,WAAW;gBACvB,OAAO;oBACL,WAAW,WAAW;gBACxB;YACF,OAAO;gBACL,WAAW,WAAW,cAAc,OAAO,QAAQ;YACrD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,0DAA0D;IAC1D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa;YACf,aAAa;YACb,UAAU;YACV,SAAS;YACT,SAAS;YAET,yBAAyB;YACzB,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAY;YAAC;YAExD,uBAAuB;YACvB,uJAAA,CAAA,UAAK,CAAC,OAAO,CAAC;YAEd,kBAAkB;YAClB;QACF;IACF,GAAG;QAAC;QAAa;QAAa;KAAe;IAE7C,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,OAAO;YACT,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC,CAAC,oBAAoB,EAAE,MAAM,OAAO,EAAE;QACpD;IACF,GAAG;QAAC;KAAM;IAEV,MAAM,cAAc;QAClB,IAAI,CAAC,WAAW,CAAC,QAAQ,OAAO;QAChC,IAAI,cAAc,WAAW,CAAC,OAAO,OAAO;QAE5C,oCAAoC;QACpC,IAAI,cAAc,OAAO;YACvB,MAAM,YAAY,WAAW,UAAU;YACvC,MAAM,cAAc,WAAW,YAAY;YAC3C,IAAI,YAAY,aAAa,OAAO;YACpC,IAAI,eAAe,OAAO,OAAO,qCAAqC;QACxE;QAEA,OAAO;IACT;IAEA,MAAM,yBAAyB;QAC7B,IAAI,CAAC,WAAW,cAAc,SAAS,CAAC,OAAO,OAAO;QACtD,MAAM,YAAY,WAAW,UAAU;QACvC,MAAM,cAAc,WAAW,YAAY;QAC3C,OAAO,YAAY;IACrB;IAEA,IAAI,CAAC,SAAS;QACZ,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA2D;;;;;;8BACzE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAE,WAAU;kCAAmC;;;;;;;;;;;;;;;;;IAIxD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsD;;;;;;oBACnE,eAAe,mBACd,8OAAC;wBAAE,WAAU;;4BAAgD;4BAC3C,aAAa,OAAO,CAAC;4BAAG;;;;;;;;;;;;;0BAK9C,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCAEtC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,SAAS,IAAM,aAAa;gCAC5B,WAAW,CAAC,uDAAuD,EACjE,cAAc,QACV,4BACA,sGACJ;0CACH;;;;;;0CAGD,8OAAC;gCACC,MAAK;gCACL,SAAS,IAAM,aAAa;gCAC5B,WAAW,CAAC,uDAAuD,EACjE,cAAc,SACV,0BACA,sGACJ;0CACH;;;;;;;;;;;;kCAMH,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,SAAS,IAAM,sBAAsB;gCACrC,WAAW,CAAC,uDAAuD,EACjE,cAAc,WACV,2BACA,sGACJ;0CACH;;;;;;0CAGD,8OAAC;gCACC,MAAK;gCACL,SAAS,IAAM,sBAAsB;gCACrC,WAAW,CAAC,uDAAuD,EACjE,cAAc,UACV,2BACA,sGACJ;0CACH;;;;;;;;;;;;kCAMH,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAkE;;;;;;0CAGnF,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;gCAClD,aAAY;gCACZ,KAAI;gCACJ,MAAK;gCACL,WAAU;;;;;;;;;;;;oBAKb,cAAc,yBACb,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAkE;;;;;;0CAGnF,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;gCACjD,aAAY;gCACZ,KAAI;gCACJ,MAAK;gCACL,WAAU;;;;;;;;;;;;kCAMhB,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAkE;;;;;;0CAGnF,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;gCACjD,aAAY;gCACZ,KAAI;gCACJ,MAAK;gCACL,WAAU;;;;;;;;;;;;kCAKd,8OAAC;wBAAI,WAAU;kCACZ;4BAAC;4BAAO;4BAAO;4BAAO;yBAAO,CAAC,GAAG,CAAC,CAAC,2BAClC,8OAAC;gCAEC,MAAK;gCACL,SAAS;oCACP,kDAAkD;oCAClD,oCAAoC;oCACpC,MAAM,UAAU;wCAAE,OAAO;wCAAM,OAAO;wCAAM,OAAO;wCAAM,QAAQ;oCAAM;oCACvE,mBAAmB,OAAO,CAAC,WAAmC;gCAChE;gCACA,WAAU;0CAET;+BAVI;;;;;;;;;;oBAgBV,iBAAiB,cAAc,SAAS,CAAC,0CACxC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAA2C,MAAK;wCAAe,SAAQ;kDACpF,cAAA,8OAAC;4CAAK,UAAS;4CAAU,GAAE;4CAAmI,UAAS;;;;;;;;;;;;;;;;8CAG3K,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAuD;;;;;;sDAGrE,8OAAC;4CAAE,WAAU;;gDAAgD;gDACtC;gDAAM;gDAA6D,iBAAiB,OAAO,CAAC;gDAAG;;;;;;;sDAEtH,8OAAC;4CACC,MAAK;4CACL,SAAS;4CACT,UAAU;4CACV,WAAU;sDAET,cAAc,iBAAiB,CAAC,QAAQ,EAAE,MAAM,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;oBAQhE,0CACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAA+C,MAAK;wCAAe,SAAQ;kDACxF,cAAA,8OAAC;4CAAK,UAAS;4CAAU,GAAE;4CAAoN,UAAS;;;;;;;;;;;;;;;;8CAG5P,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA2D;;;;;;sDAGzE,8OAAC;4CAAE,WAAU;;gDAAoD;gDACrD;gDAAM;gDAAqB;gDAAQ;;;;;;;sDAE/C,8OAAC;4CACC,MAAK;4CACL,SAAS;4CACT,UAAU;4CACV,WAAU;;8DAEV,8OAAC,sMAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC;8DAAM,kBAAkB,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQzD,8OAAC;wBACC,MAAK;wBACL,UAAU,CAAC,iBAAiB,aAAa;wBACzC,WAAW,CAAC,0GAA0G,EACpH,cAAc,QACV,+CACA,0CACJ;kCAED,aAAa,6BACZ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;;;;;gCACd,YAAY,kBAAkB;;;;;;mCAE/B,iBAAiB,cAAc,QACjC,sBAEA,GAAG,cAAc,QAAQ,QAAQ,OAAO,CAAC,EAAE,cAAc,WAAW,WAAW,SAAS;;;;;;oBAK3F,UAAU,CAAC,cAAc,YAAY,KAAK,mBACzC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA4C;;;;;;0CAC1D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAmC;;;;;;0DACnD,8OAAC;gDAAK,WAAW,CAAC,YAAY,EAAE,cAAc,QAAQ,mBAAmB,gBAAgB;0DACtF,UAAU,WAAW;;;;;;;;;;;;kDAG1B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAmC;;;;;;0DACnD,8OAAC;gDAAK,WAAU;0DAAiC,UAAU,WAAW;;;;;;;;;;;;kDAExE,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAmC;;;;;;0DACnD,8OAAC;gDAAK,WAAU;;oDAAiC;oDAAO;;;;;;;;;;;;;kDAE1D,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAmC;;;;;;0DACnD,8OAAC;gDAAK,WAAU;;oDACb,cAAc,WAAW,GAAG,aAAa,OAAO,CAAC,GAAG,SAAS,CAAC,GAAG;oDAAM;;;;;;;;;;;;;kDAG5E,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAmC;;;;;;0DACnD,8OAAC;gDAAK,WAAU;;oDAA6C;oDAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQnF","debugId":null}},
    {"offset": {"line": 2653, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/components/OpenOrders.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useAccount } from 'wagmi';\r\n\r\ninterface MockOrder {\r\n  id: number;\r\n  companyId: number;\r\n  type: 'buy' | 'sell';\r\n  amount: number;\r\n  price: number;\r\n  timestamp: Date;\r\n}\r\n\r\nexport default function OpenOrders() {\r\n  const { address } = useAccount();\r\n  const [mounted, setMounted] = useState(false);\r\n  const [orders, setOrders] = useState<MockOrder[]>([]);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    // Initialize orders only on client to avoid hydration mismatch\r\n    const mockOrders: MockOrder[] = [\r\n      {\r\n        id: 1,\r\n        companyId: 1,\r\n        type: 'buy',\r\n        amount: 100,\r\n        price: 0.0025,\r\n        timestamp: new Date(Date.now() - 300000), // 5 minutes ago\r\n      },\r\n      {\r\n        id: 2,\r\n        companyId: 3,\r\n        type: 'sell',\r\n        amount: 50,\r\n        price: 0.0034,\r\n        timestamp: new Date(Date.now() - 600000), // 10 minutes ago\r\n      },\r\n    ];\r\n    setOrders(mockOrders);\r\n  }, []);\r\n\r\n  const handleCancelOrder = (orderId: number) => {\r\n    console.log('Cancel order:', orderId);\r\n    // TODO: Implement actual order cancellation\r\n  };\r\n\r\n  const formatTimestamp = (timestamp: Date) => {\r\n    return timestamp.toLocaleString();\r\n  };\r\n\r\n  if (!address) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Open Orders</h3>\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Connect your wallet to view open orders</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show loading state until mounted\r\n  if (!mounted) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Open Orders</h3>\r\n        <div className=\"text-center py-8\">\r\n          <div className=\"animate-pulse\">\r\n            <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-32 mx-auto\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (orders.length === 0) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Open Orders</h3>\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-gray-600 dark:text-gray-400\">No open orders</p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-500 mt-1\">\r\n            Place an order to see it here\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Open Orders</h3>\r\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n          {orders.length} active order{orders.length !== 1 ? 's' : ''}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"w-full\">\r\n          <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n            <tr>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Type\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Company\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Amount\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Price\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Total\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Created\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {orders.map((order) => {\r\n              const total = order.amount * order.price;\r\n              \r\n              return (\r\n                <tr key={order.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                      order.type === 'buy'\r\n                        ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\r\n                        : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\r\n                    }`}>\r\n                      {order.type === 'buy' ? 'Buy' : 'Sell'}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    #{order.companyId}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    {order.amount}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    {order.price.toFixed(4)} DSTK\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                    {total.toFixed(4)} DSTK\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                    {formatTimestamp(order.timestamp)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <button\r\n                      onClick={() => handleCancelOrder(order.id)}\r\n                      className=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300 text-sm font-medium\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3047, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/components/LiquidityProvider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useAccount } from 'wagmi';\r\nimport { useDeStock } from '../lib/hooks/useDeStock';\r\n\r\ninterface LiquidityProviderProps {\r\n  companyId: number;\r\n  currentPrice?: number;\r\n}\r\n\r\nexport default function LiquidityProvider({ companyId, currentPrice = 0 }: LiquidityProviderProps) {\r\n  const { address } = useAccount();\r\n  const { addLiquidity, removeLiquidity, isPending } = useDeStock();\r\n  \r\n  const [activeTab, setActiveTab] = useState<'add' | 'remove'>('add');\r\n  const [tokenAmount, setTokenAmount] = useState('');\r\n  const [shareAmount, setShareAmount] = useState('');\r\n  const [lpTokenAmount, setLpTokenAmount] = useState('');\r\n\r\n  // TODO: Fix hook configuration types after useDeStock refactor\r\n  // const { data: lpBalance } = getLPTokenBalance(companyId);\r\n  const lpBalance: any = null;\r\n\r\n  const handleTokenAmountChange = (value: string) => {\r\n    setTokenAmount(value);\r\n    if (currentPrice > 0) {\r\n      const calculatedShares = (parseFloat(value) || 0) / currentPrice;\r\n      setShareAmount(calculatedShares.toFixed(0));\r\n    }\r\n  };\r\n\r\n  const handleShareAmountChange = (value: string) => {\r\n    setShareAmount(value);\r\n    if (currentPrice > 0) {\r\n      const calculatedTokens = (parseFloat(value) || 0) * currentPrice;\r\n      setTokenAmount(calculatedTokens.toFixed(4));\r\n    }\r\n  };\r\n\r\n  const handleAddLiquidity = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!tokenAmount || !shareAmount) return;\r\n    \r\n    addLiquidity(companyId, tokenAmount, shareAmount);\r\n    setTokenAmount('');\r\n    setShareAmount('');\r\n  };\r\n\r\n  const handleRemoveLiquidity = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!lpTokenAmount) return;\r\n    \r\n    removeLiquidity(companyId, lpTokenAmount);\r\n    setLpTokenAmount('');\r\n  };\r\n\r\n  const isAddFormValid = () => {\r\n    return address && tokenAmount && shareAmount && parseFloat(tokenAmount) > 0 && parseFloat(shareAmount) > 0;\r\n  };\r\n\r\n  const isRemoveFormValid = () => {\r\n    return address && lpTokenAmount && parseFloat(lpTokenAmount) > 0;\r\n  };\r\n\r\n  if (!address) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Liquidity Provider</h3>\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Connect your wallet to provide liquidity</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Liquidity Provider</h3>\r\n        {lpBalance && (\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n            Your LP Tokens: {lpBalance.toString()}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"p-6\">\r\n        {/* Tab Navigation */}\r\n        <div className=\"flex mb-6 rounded-lg border border-gray-200 dark:border-gray-600 overflow-hidden\">\r\n          <button\r\n            onClick={() => setActiveTab('add')}\r\n            className={`flex-1 py-3 px-4 text-sm font-medium transition-colors ${\r\n              activeTab === 'add'\r\n                ? 'bg-blue-600 text-white'\r\n                : 'bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600'\r\n            }`}\r\n          >\r\n            Add Liquidity\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('remove')}\r\n            className={`flex-1 py-3 px-4 text-sm font-medium transition-colors ${\r\n              activeTab === 'remove'\r\n                ? 'bg-blue-600 text-white'\r\n                : 'bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600'\r\n            }`}\r\n          >\r\n            Remove Liquidity\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add Liquidity Form */}\r\n        {activeTab === 'add' && (\r\n          <form onSubmit={handleAddLiquidity} className=\"space-y-6\">\r\n            <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700 rounded-lg p-4\">\r\n              <h4 className=\"text-sm font-medium text-yellow-800 dark:text-yellow-200 mb-2\">\r\n                Important Information\r\n              </h4>\r\n              <ul className=\"text-sm text-yellow-700 dark:text-yellow-300 space-y-1\">\r\n                <li>• You'll receive LP tokens representing your share of the pool</li>\r\n                <li>• LP tokens earn trading fees from the pool</li>\r\n                <li>• Token amounts are automatically calculated based on current ratio</li>\r\n                <li>• You're exposed to impermanent loss risk</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                DSTK Token Amount\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={tokenAmount}\r\n                onChange={(e) => handleTokenAmountChange(e.target.value)}\r\n                placeholder=\"0.0000\"\r\n                min=\"0\"\r\n                step=\"0.0001\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Share Amount\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={shareAmount}\r\n                onChange={(e) => handleShareAmountChange(e.target.value)}\r\n                placeholder=\"0\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n              />\r\n            </div>\r\n\r\n            {currentPrice > 0 && tokenAmount && shareAmount && (\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4 space-y-2\">\r\n                <h4 className=\"font-medium text-gray-900 dark:text-white\">Liquidity Summary</h4>\r\n                <div className=\"text-sm space-y-1\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600 dark:text-gray-400\">DSTK Tokens:</span>\r\n                    <span className=\"text-gray-900 dark:text-white\">{tokenAmount}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600 dark:text-gray-400\">Shares:</span>\r\n                    <span className=\"text-gray-900 dark:text-white\">{shareAmount}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600 dark:text-gray-400\">Rate:</span>\r\n                    <span className=\"text-gray-900 dark:text-white\">1 Share = {currentPrice.toFixed(4)} DSTK</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!isAddFormValid() || isPending}\r\n              className=\"w-full py-3 px-4 bg-blue-600 hover:bg-blue-700 text-white rounded-md font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isPending ? (\r\n                <div className=\"flex items-center justify-center gap-2\">\r\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                  Adding Liquidity...\r\n                </div>\r\n              ) : (\r\n                'Add Liquidity'\r\n              )}\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {/* Remove Liquidity Form */}\r\n        {activeTab === 'remove' && (\r\n          <form onSubmit={handleRemoveLiquidity} className=\"space-y-6\">\r\n            <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700 rounded-lg p-4\">\r\n              <h4 className=\"text-sm font-medium text-red-800 dark:text-red-200 mb-2\">\r\n                Remove Liquidity\r\n              </h4>\r\n              <p className=\"text-sm text-red-700 dark:text-red-300\">\r\n                Removing liquidity will burn your LP tokens and return the underlying assets.\r\n                You'll stop earning fees from this pool.\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                LP Token Amount\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={lpTokenAmount}\r\n                onChange={(e) => setLpTokenAmount(e.target.value)}\r\n                placeholder=\"0\"\r\n                min=\"0\"\r\n                max={lpBalance ? lpBalance.toString() : undefined}\r\n                step=\"1\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n              />\r\n              {lpBalance && (\r\n                <div className=\"mt-2 flex gap-2\">\r\n                  {['25%', '50%', '75%', '100%'].map((percentage) => (\r\n                    <button\r\n                      key={percentage}\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        const balance = Number(lpBalance);\r\n                        const percentageMap = { '25%': 0.25, '50%': 0.5, '75%': 0.75, '100%': 1 };\r\n                        const amount = Math.floor(balance * percentageMap[percentage as keyof typeof percentageMap]);\r\n                        setLpTokenAmount(amount.toString());\r\n                      }}\r\n                      className=\"py-1 px-3 text-xs font-medium text-gray-600 dark:text-gray-400 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\r\n                    >\r\n                      {percentage}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!isRemoveFormValid() || isPending}\r\n              className=\"w-full py-3 px-4 bg-red-600 hover:bg-red-700 text-white rounded-md font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isPending ? (\r\n                <div className=\"flex items-center justify-center gap-2\">\r\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                  Removing Liquidity...\r\n                </div>\r\n              ) : (\r\n                'Remove Liquidity'\r\n              )}\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3592, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/components/LoadingSpinner.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { clsx } from 'clsx';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'small' | 'medium' | 'large';\r\n  variant?: 'circular' | 'dots' | 'bars';\r\n  className?: string;\r\n  overlay?: boolean;\r\n}\r\n\r\nexport function LoadingSpinner({ \r\n  size = 'medium', \r\n  variant = 'circular', \r\n  className = '',\r\n  overlay = false \r\n}: LoadingSpinnerProps) {\r\n  const sizeClasses = {\r\n    small: 'w-4 h-4',\r\n    medium: 'w-8 h-8',\r\n    large: 'w-12 h-12',\r\n  };\r\n\r\n  if (variant === 'circular') {\r\n    return (\r\n      <div className={clsx(\r\n        'flex items-center justify-center',\r\n        overlay && 'fixed inset-0 glass-modal z-50',\r\n        className\r\n      )}>\r\n        <motion.div\r\n          className={clsx(\r\n            'border-2 border-destock-primary/20 border-t-destock-primary rounded-full',\r\n            sizeClasses[size]\r\n          )}\r\n          animate={{ rotate: 360 }}\r\n          transition={{\r\n            duration: 1,\r\n            repeat: Infinity,\r\n            ease: 'linear',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (variant === 'dots') {\r\n    return (\r\n      <div className={clsx(\r\n        'flex items-center justify-center space-x-1',\r\n        overlay && 'fixed inset-0 glass-modal z-50',\r\n        className\r\n      )}>\r\n        {[0, 1, 2].map((index) => (\r\n          <motion.div\r\n            key={index}\r\n            className=\"w-2 h-2 bg-destock-primary rounded-full\"\r\n            animate={{\r\n              scale: [1, 1.5, 1],\r\n              opacity: [0.5, 1, 0.5],\r\n            }}\r\n            transition={{\r\n              duration: 1,\r\n              repeat: Infinity,\r\n              delay: index * 0.2,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (variant === 'bars') {\r\n    return (\r\n      <div className={clsx(\r\n        'flex items-center justify-center space-x-1',\r\n        overlay && 'fixed inset-0 glass-modal z-50',\r\n        className\r\n      )}>\r\n        {[0, 1, 2, 3].map((index) => (\r\n          <motion.div\r\n            key={index}\r\n            className=\"w-1 bg-destock-primary rounded-full\"\r\n            style={{ height: size === 'small' ? 16 : size === 'medium' ? 24 : 32 }}\r\n            animate={{\r\n              scaleY: [1, 2, 1],\r\n            }}\r\n            transition={{\r\n              duration: 1,\r\n              repeat: Infinity,\r\n              delay: index * 0.1,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS,eAAe,EAC7B,OAAO,QAAQ,EACf,UAAU,UAAU,EACpB,YAAY,EAAE,EACd,UAAU,KAAK,EACK;IACpB,MAAM,cAAc;QAClB,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IAEA,IAAI,YAAY,YAAY;QAC1B,qBACE,8OAAC;YAAI,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACjB,oCACA,WAAW,kCACX;sBAEA,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACZ,4EACA,WAAW,CAAC,KAAK;gBAEnB,SAAS;oBAAE,QAAQ;gBAAI;gBACvB,YAAY;oBACV,UAAU;oBACV,QAAQ;oBACR,MAAM;gBACR;;;;;;;;;;;IAIR;IAEA,IAAI,YAAY,QAAQ;QACtB,qBACE,8OAAC;YAAI,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACjB,8CACA,WAAW,kCACX;sBAEC;gBAAC;gBAAG;gBAAG;aAAE,CAAC,GAAG,CAAC,CAAC,sBACd,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBAET,WAAU;oBACV,SAAS;wBACP,OAAO;4BAAC;4BAAG;4BAAK;yBAAE;wBAClB,SAAS;4BAAC;4BAAK;4BAAG;yBAAI;oBACxB;oBACA,YAAY;wBACV,UAAU;wBACV,QAAQ;wBACR,OAAO,QAAQ;oBACjB;mBAVK;;;;;;;;;;IAef;IAEA,IAAI,YAAY,QAAQ;QACtB,qBACE,8OAAC;YAAI,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACjB,8CACA,WAAW,kCACX;sBAEC;gBAAC;gBAAG;gBAAG;gBAAG;aAAE,CAAC,GAAG,CAAC,CAAC,sBACjB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBAET,WAAU;oBACV,OAAO;wBAAE,QAAQ,SAAS,UAAU,KAAK,SAAS,WAAW,KAAK;oBAAG;oBACrE,SAAS;wBACP,QAAQ;4BAAC;4BAAG;4BAAG;yBAAE;oBACnB;oBACA,YAAY;wBACV,UAAU;wBACV,QAAQ;wBACR,OAAO,QAAQ;oBACjB;mBAVK;;;;;;;;;;IAef;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 3713, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/components/TradingChart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { createChart, IChartApi, ISeriesApi, ColorType, UTCTimestamp } from 'lightweight-charts';\r\nimport { motion } from 'framer-motion';\r\nimport { useTheme } from 'next-themes';\r\nimport { TrendingUpIcon, TrendingDownIcon, BarChart3Icon, LineChartIcon } from 'lucide-react';\r\nimport { LoadingSpinner } from './LoadingSpinner';\r\n\r\ninterface ChartDataPoint {\r\n  time: UTCTimestamp;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume?: number;\r\n}\r\n\r\ninterface TradingChartProps {\r\n  symbol?: string;\r\n  data?: ChartDataPoint[];\r\n  height?: number;\r\n  showTimeframes?: boolean;\r\n  showIndicators?: boolean;\r\n  className?: string;\r\n}\r\n\r\ntype Timeframe = '1H' | '4H' | '1D' | '1W' | '1M';\r\ntype ChartType = 'candlestick' | 'line' | 'area';\r\n\r\n// Stable empty array reference to prevent unnecessary re-renders\r\nconst EMPTY_DATA: ChartDataPoint[] = [];\r\n\r\nexport function TradingChart({\r\n  symbol = 'DEMO',\r\n  data = EMPTY_DATA,\r\n  height = 400,\r\n  showTimeframes = true,\r\n  className = '',\r\n}: TradingChartProps) {\r\n  const chartContainerRef = useRef<HTMLDivElement>(null);\r\n  const chartRef = useRef<IChartApi | null>(null);\r\n  const candlestickSeriesRef = useRef<ISeriesApi<'Candlestick'> | null>(null);\r\n  const dataRef = useRef<ChartDataPoint[]>(EMPTY_DATA);\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<Timeframe>('1D');\r\n  const [chartType, setChartType] = useState<ChartType>('candlestick');\r\n  const [loading, setLoading] = useState(true);\r\n  const [chartData, setChartData] = useState<ChartDataPoint[]>([]);\r\n  const { theme } = useTheme();\r\n\r\n  const timeframes: Timeframe[] = ['1H', '4H', '1D', '1W', '1M'];\r\n\r\n  // Initialize chart\r\n  useEffect(() => {\r\n    if (!chartContainerRef.current) return;\r\n\r\n    const isDark = theme === 'dark';\r\n    \r\n    const chart = createChart(chartContainerRef.current, {\r\n      width: chartContainerRef.current.clientWidth,\r\n      height,\r\n      layout: {\r\n        background: { type: ColorType.Solid, color: 'transparent' },\r\n        textColor: isDark ? '#E5E7EB' : '#374151',\r\n      },\r\n      grid: {\r\n        vertLines: {\r\n          color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n        horzLines: {\r\n          color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n      },\r\n      crosshair: {\r\n        mode: 1, // Normal crosshair\r\n      },\r\n      timeScale: {\r\n        borderColor: isDark ? '#374151' : '#D1D5DB',\r\n        timeVisible: true,\r\n        secondsVisible: false,\r\n      },\r\n      rightPriceScale: {\r\n        borderColor: isDark ? '#374151' : '#D1D5DB',\r\n      },\r\n    });\r\n\r\n    const candlestickSeries = chart.addCandlestickSeries({\r\n      upColor: '#00D4AA',\r\n      downColor: '#F6465D',\r\n      borderDownColor: '#F6465D',\r\n      borderUpColor: '#00D4AA',\r\n      wickDownColor: '#F6465D',\r\n      wickUpColor: '#00D4AA',\r\n    });\r\n\r\n    chartRef.current = chart;\r\n    candlestickSeriesRef.current = candlestickSeries;\r\n\r\n    // Handle resize\r\n    const handleResize = () => {\r\n      if (chartContainerRef.current && chartRef.current) {\r\n        chartRef.current.applyOptions({\r\n          width: chartContainerRef.current.clientWidth,\r\n        });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (chartRef.current) {\r\n        chartRef.current.remove();\r\n        chartRef.current = null;\r\n        candlestickSeriesRef.current = null;\r\n      }\r\n    };\r\n  }, [height, theme]);\r\n\r\n  // Update chart theme\r\n  useEffect(() => {\r\n    if (!chartRef.current) return;\r\n\r\n    const isDark = theme === 'dark';\r\n    \r\n    chartRef.current.applyOptions({\r\n      layout: {\r\n        background: { type: ColorType.Solid, color: 'transparent' },\r\n        textColor: isDark ? '#E5E7EB' : '#374151',\r\n      },\r\n      grid: {\r\n        vertLines: {\r\n          color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n        horzLines: {\r\n          color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        },\r\n      },\r\n      timeScale: {\r\n        borderColor: isDark ? '#374151' : '#D1D5DB',\r\n      },\r\n      rightPriceScale: {\r\n        borderColor: isDark ? '#374151' : '#D1D5DB',\r\n      },\r\n    });\r\n  }, [theme]);\r\n\r\n  // Handle prop data changes\r\n  useEffect(() => {\r\n    // Only update if data reference actually changed and has content\r\n    if (data !== dataRef.current && data.length > 0 && data !== EMPTY_DATA) {\r\n      console.log('TradingChart: Using provided data', data.length, 'points');\r\n      dataRef.current = data;\r\n      setChartData(data);\r\n      setLoading(false);\r\n    }\r\n  }, [data]);\r\n\r\n  // Load chart data from API\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      // Skip API loading if data is provided via props\r\n      if (data.length > 0 && data !== EMPTY_DATA) {\r\n        return;\r\n      }\r\n\r\n      console.log('TradingChart: Loading data from API', { symbol, selectedTimeframe });\r\n      setLoading(true);\r\n      try {\r\n        // Fetch data from API\r\n        const response = await fetch(`/api/market?type=chart&symbol=${symbol}&timeframe=${selectedTimeframe}&days=30`);\r\n        const result = await response.json();\r\n        \r\n        if (response.ok && result.data && result.data.ohlc) {\r\n          const apiData = result.data.ohlc || [];\r\n          \r\n          // Convert to proper format for Lightweight Charts\r\n          const formattedData = apiData.map((item: any) => ({\r\n            ...item,\r\n            time: item.time as UTCTimestamp,\r\n          }));\r\n          \r\n          console.log('TradingChart: API data loaded', formattedData.length, 'points');\r\n          setChartData(formattedData);\r\n        } else {\r\n          console.warn('Failed to fetch chart data:', result);\r\n          // Set empty data to stop loading\r\n          setChartData([]);\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Failed to load chart data:', error);\r\n        setChartData([]);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [symbol, selectedTimeframe]);\r\n\r\n  // Update chart data\r\n  useEffect(() => {\r\n    if (!candlestickSeriesRef.current || chartData.length === 0) return;\r\n\r\n    candlestickSeriesRef.current.setData(chartData);\r\n    \r\n    // Fit content after data is loaded\r\n    if (chartRef.current) {\r\n      chartRef.current.timeScale().fitContent();\r\n    }\r\n  }, [chartData]);\r\n\r\n  const handleTimeframeChange = (timeframe: Timeframe) => {\r\n    setSelectedTimeframe(timeframe);\r\n  };\r\n\r\n  const currentPrice = chartData.length > 0 ? chartData[chartData.length - 1].close : 0;\r\n  const previousPrice = chartData.length > 1 ? chartData[chartData.length - 2].close : currentPrice;\r\n  const priceChange = currentPrice - previousPrice;\r\n  const priceChangePercent = previousPrice > 0 ? (priceChange / previousPrice) * 100 : 0;\r\n  const isPositive = priceChange >= 0;\r\n\r\n  return (\r\n    <div className={`glass-card ${className}`}>\r\n      {/* Chart Header */}\r\n      <div className=\"p-4 border-b border-white/10 dark:border-black/10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n              {symbol}\r\n            </h3>\r\n            \r\n            {/* Price Information */}\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n                ${currentPrice.toFixed(2)}\r\n              </span>\r\n              <div className={`flex items-center space-x-1 ${isPositive ? 'text-success' : 'text-danger'}`}>\r\n                {isPositive ? (\r\n                  <TrendingUpIcon className=\"w-4 h-4\" />\r\n                ) : (\r\n                  <TrendingDownIcon className=\"w-4 h-4\" />\r\n                )}\r\n                <span className=\"font-medium\">\r\n                  {isPositive ? '+' : ''}{priceChange.toFixed(2)} ({priceChangePercent.toFixed(2)}%)\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chart Type Toggle */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <motion.button\r\n              onClick={() => setChartType('candlestick')}\r\n              className={`p-2 rounded-md transition-colors duration-200 ${\r\n                chartType === 'candlestick'\r\n                  ? 'bg-destock-primary text-white'\r\n                  : 'text-gray-500 hover:text-gray-700 dark:hover:text-gray-300'\r\n              }`}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <BarChart3Icon className=\"w-4 h-4\" />\r\n            </motion.button>\r\n            <motion.button\r\n              onClick={() => setChartType('line')}\r\n              className={`p-2 rounded-md transition-colors duration-200 ${\r\n                chartType === 'line'\r\n                  ? 'bg-destock-primary text-white'\r\n                  : 'text-gray-500 hover:text-gray-700 dark:hover:text-gray-300'\r\n              }`}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <LineChartIcon className=\"w-4 h-4\" />\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Timeframe Selector */}\r\n        {showTimeframes && (\r\n          <div className=\"flex space-x-1\">\r\n            {timeframes.map((timeframe) => (\r\n              <motion.button\r\n                key={timeframe}\r\n                onClick={() => handleTimeframeChange(timeframe)}\r\n                className={`px-3 py-1 text-sm font-medium rounded-md transition-all duration-200 ${\r\n                  selectedTimeframe === timeframe\r\n                    ? 'bg-destock-primary text-white shadow-sm'\r\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                }`}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                {timeframe}\r\n              </motion.button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Chart Container */}\r\n      <div className=\"relative\">\r\n        {loading && (\r\n          <div className=\"absolute inset-0 flex items-center justify-center z-10\">\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n        \r\n        <motion.div\r\n          ref={chartContainerRef}\r\n          className={`${loading ? 'opacity-30' : 'opacity-100'} transition-opacity duration-200`}\r\n          initial={{ opacity: 0, scale: 0.95 }}\r\n          animate={{ opacity: loading ? 0.3 : 1, scale: 1 }}\r\n          transition={{ duration: 0.3 }}\r\n          style={{ height: `${height}px` }}\r\n        />\r\n      </div>\r\n\r\n      {/* Chart Footer with Stats */}\r\n      <div className=\"p-4 border-t border-white/10 dark:border-black/10\">\r\n        <div className=\"grid grid-cols-4 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-500 dark:text-gray-400 block\">Open</span>\r\n            <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n              ${chartData.length > 0 ? chartData[chartData.length - 1].open.toFixed(2) : '0.00'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500 dark:text-gray-400 block\">High</span>\r\n            <span className=\"font-medium text-success\">\r\n              ${chartData.length > 0 ? chartData[chartData.length - 1].high.toFixed(2) : '0.00'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500 dark:text-gray-400 block\">Low</span>\r\n            <span className=\"font-medium text-danger\">\r\n              ${chartData.length > 0 ? chartData[chartData.length - 1].low.toFixed(2) : '0.00'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500 dark:text-gray-400 block\">Volume</span>\r\n            <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n              {chartData.length > 0 ? (chartData[chartData.length - 1].volume || 0).toLocaleString() : '0'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4266, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/lib/utils/companyUtils.ts"],"sourcesContent":["import companiesData from '../constants/companies.json';\r\nimport logosData from '../constants/logos.json';\r\nimport { Company, LogoMapping, CompanyList, FilterOptions } from '../types/company';\r\n\r\n// Get all companies as an array\r\nexport const getAllCompanies = (): CompanyList => {\r\n  const companies = companiesData.companies as { [key: string]: Company };\r\n  return Object.values(companies);\r\n};\r\n\r\n// Get all company IDs as an array (for consistent ordering)\r\nexport const getAllCompanyIds = (): string[] => {\r\n  const companies = companiesData.companies as { [key: string]: Company };\r\n  return Object.keys(companies);\r\n};\r\n\r\n// Convert string company ID to numeric ID for blockchain operations\r\nexport const getNumericCompanyId = (stringId: string): number => {\r\n  const companyIds = getAllCompanyIds();\r\n  const index = companyIds.indexOf(stringId);\r\n  return index === -1 ? -1 : index;\r\n};\r\n\r\n// Convert numeric company ID back to string ID\r\nexport const getStringCompanyId = (numericId: number): string | undefined => {\r\n  const companyIds = getAllCompanyIds();\r\n  return companyIds[numericId];\r\n};\r\n\r\n// Get company by numeric ID (for blockchain operations)\r\nexport const getCompanyByNumericId = (numericId: number): Company | undefined => {\r\n  const stringId = getStringCompanyId(numericId);\r\n  return stringId ? getCompanyById(stringId) : undefined;\r\n};\r\n\r\n// Get company by ID\r\nexport const getCompanyById = (id: string): Company | undefined => {\r\n  const companies = companiesData.companies as { [key: string]: Company };\r\n  return companies[id];\r\n};\r\n\r\n// Get company logo URL\r\nexport const getCompanyLogo = (companyId: string): string | undefined => {\r\n  const logos = logosData as LogoMapping;\r\n  return logos[companyId];\r\n};\r\n\r\n// Get companies by sector\r\nexport const getCompaniesBySector = (sector: string): CompanyList => {\r\n  return getAllCompanies().filter(company => company.sector === sector);\r\n};\r\n\r\n// Get companies by category  \r\nexport const getCompaniesByCategory = (category: string): CompanyList => {\r\n  return getAllCompanies().filter(company => company.category === category);\r\n};\r\n\r\n// Search companies\r\nexport const searchCompanies = (searchTerm: string): CompanyList => {\r\n  const term = searchTerm.toLowerCase();\r\n  return getAllCompanies().filter(company => \r\n    company.name.toLowerCase().includes(term) ||\r\n    company.symbol.toLowerCase().includes(term) ||\r\n    company.tokenName.toLowerCase().includes(term) ||\r\n    company.description.toLowerCase().includes(term) ||\r\n    company.category.toLowerCase().includes(term) ||\r\n    company.sector.toLowerCase().includes(term)\r\n  );\r\n};\r\n\r\n// Filter and sort companies\r\nexport const filterAndSortCompanies = (options: FilterOptions): CompanyList => {\r\n  let companies = getAllCompanies();\r\n\r\n  // Apply search filter\r\n  if (options.searchTerm) {\r\n    companies = searchCompanies(options.searchTerm);\r\n  }\r\n\r\n  // Apply sector filter\r\n  if (options.selectedSector) {\r\n    companies = companies.filter(company => company.sector === options.selectedSector);\r\n  }\r\n\r\n  // Apply category filter\r\n  if (options.selectedCategory) {\r\n    companies = companies.filter(company => company.category === options.selectedCategory);\r\n  }\r\n\r\n  // Apply sorting\r\n  if (options.sortField && options.sortDirection) {\r\n    companies.sort((a, b) => {\r\n      let aValue: any, bValue: any;\r\n      \r\n      switch (options.sortField) {\r\n        case 'name':\r\n          aValue = a.name;\r\n          bValue = b.name;\r\n          break;\r\n        case 'price':\r\n          // Extract numeric value from price string (e.g., \"$1.00\" -> 1.00)\r\n          aValue = parseFloat(a.price.replace('$', ''));\r\n          bValue = parseFloat(b.price.replace('$', ''));\r\n          break;\r\n        case 'marketCap':\r\n          // Extract numeric value from market cap string (e.g., \"$1B\" -> 1000000000)\r\n          aValue = parseMarketCap(a.marketCap);\r\n          bValue = parseMarketCap(b.marketCap);\r\n          break;\r\n        default:\r\n          return 0;\r\n      }\r\n\r\n      if (typeof aValue === 'string') {\r\n        return options.sortDirection === 'asc' \r\n          ? aValue.localeCompare(bValue) \r\n          : bValue.localeCompare(aValue);\r\n      }\r\n      \r\n      return options.sortDirection === 'asc' ? aValue - bValue : bValue - aValue;\r\n    });\r\n  }\r\n\r\n  return companies;\r\n};\r\n\r\n// Parse market cap string to number for sorting\r\nconst parseMarketCap = (marketCap: string): number => {\r\n  const value = parseFloat(marketCap.replace(/[$,]/g, ''));\r\n  if (marketCap.includes('B')) {\r\n    return value * 1e9;\r\n  } else if (marketCap.includes('M')) {\r\n    return value * 1e6;\r\n  } else if (marketCap.includes('K')) {\r\n    return value * 1e3;\r\n  }\r\n  return value;\r\n};\r\n\r\n// Get all available sectors\r\nexport const getAllSectors = (): string[] => {\r\n  return companiesData.sectors;\r\n};\r\n\r\n// Get all available categories\r\nexport const getAllCategories = (): string[] => {\r\n  return companiesData.categories;\r\n};\r\n\r\n// Get random companies for featured section\r\nexport const getRandomCompanies = (count: number): CompanyList => {\r\n  const companies = getAllCompanies();\r\n  const shuffled = [...companies].sort(() => 0.5 - Math.random());\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\n// Get trending companies (high market cap)\r\nexport const getTrendingCompanies = (): CompanyList => {\r\n  return getAllCompanies()\r\n    .filter(company => {\r\n      const marketCapValue = parseFloat(company.marketCap.replace(/[$BM]/g, ''));\r\n      const marketCapInNumber = company.marketCap.includes('B') ? marketCapValue * 1000 : marketCapValue;\r\n      return marketCapInNumber > 500; // Companies with market cap over 500M\r\n    })\r\n    .sort((a, b) => {\r\n      const aValue = parseFloat(a.marketCap.replace(/[$BM]/g, '')) * (a.marketCap.includes('B') ? 1000 : 1);\r\n      const bValue = parseFloat(b.marketCap.replace(/[$BM]/g, '')) * (b.marketCap.includes('B') ? 1000 : 1);\r\n      return bValue - aValue;\r\n    });\r\n};\r\n\r\n// Get top companies by market cap\r\nexport const getTopCompaniesByMarketCap = (count: number = 10): CompanyList => {\r\n  return getAllCompanies()\r\n    .sort((a, b) => parseMarketCap(b.marketCap) - parseMarketCap(a.marketCap))\r\n    .slice(0, count);\r\n};\r\n\r\n// Format market cap for display\r\nexport const formatMarketCap = (marketCapString: string): string => {\r\n  const value = parseMarketCap(marketCapString);\r\n  \r\n  if (value >= 1e9) {\r\n    return `$${(value / 1e9).toFixed(1)}B`;\r\n  } else if (value >= 1e6) {\r\n    return `$${(value / 1e6).toFixed(1)}M`;\r\n  } else if (value >= 1e3) {\r\n    return `$${(value / 1e3).toFixed(1)}K`;\r\n  }\r\n  \r\n  return `$${value.toFixed(2)}`;\r\n};\r\n\r\n// Format price for display\r\nexport const formatPrice = (priceString: string): string => {\r\n  const value = parseFloat(priceString.replace('$', ''));\r\n  return `$${value.toFixed(2)}`;\r\n};\r\n\r\n// Get company statistics\r\nexport const getCompanyStats = () => {\r\n  const companies = getAllCompanies();\r\n  const totalMarketCap = companies.reduce((sum, company) => \r\n    sum + parseMarketCap(company.marketCap), 0\r\n  );\r\n  \r\n  return {\r\n    totalCompanies: companies.length,\r\n    totalMarketCap: formatMarketCap(`$${totalMarketCap}`),\r\n    sectors: getAllSectors().length,\r\n    categories: getAllCategories().length,\r\n    averagePrice: companies.reduce((sum, company) => \r\n      sum + parseFloat(company.price.replace('$', '')), 0\r\n    ) / companies.length\r\n  };\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4445, "column": 0}, "map": {"version":3,"sources":["file:///D:/intel/web3ssh/DeStock-1/apps/web/app/trading/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'next/navigation';\r\nimport OrderBook from '@/components/OrderBook';\r\nimport DepthChart from '@/components/DepthChart';\r\nimport TradingForm from '@/components/TradingForm';\r\nimport OpenOrders from '@/components/OpenOrders';\r\nimport LiquidityProvider from '@/components/LiquidityProvider';\r\nimport { TradingChart } from '@/components/TradingChart';\r\nimport { useWebSocket } from '@/lib/providers/WebSocketProvider';\r\nimport { getNumericCompanyId, getCompanyById } from '@/lib/utils/companyUtils';\r\nimport { AlertTriangle, RefreshCw, WifiOff } from 'lucide-react';\r\n\r\nexport default function TradingPage() {\r\n  const params = useParams();\r\n  const stringCompanyId = params?.id as string;\r\n  const numericCompanyId = getNumericCompanyId(stringCompanyId);\r\n  const { connectionStatus, error, reconnect, hasRetryableError } = useWebSocket();\r\n  \r\n  const [activeTab, setActiveTab] = useState<'trade' | 'liquidity'>('trade');\r\n  const [dataLoadTimeout, setDataLoadTimeout] = useState(false);\r\n  \r\n  // Get company data from JSON (for display info)\r\n  const companyInfo = getCompanyById(stringCompanyId);\r\n  \r\n  // Get blockchain data using numeric ID\r\n  // TODO: Fix hook configuration types after useDeStock refactor  \r\n  // const companyConfig = getCompany(numericCompanyId);\r\n  // const priceConfig = getSharePrice(numericCompanyId);\r\n  \r\n  // const { data: company, isLoading: companyLoading, error: companyError } = useReadContract(companyConfig);\r\n  // const { data: sharePrice, isLoading: priceLoading } = useReadContract(priceConfig);\r\n  \r\n  // Temporary fallback for display purposes - Mock data to bypass registration check\r\n  const company: any = companyInfo ? {\r\n    0: companyInfo.name, // Company name\r\n    1: true, // isActive\r\n    2: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266', // owner\r\n    3: '1000000', // totalSupply\r\n    4: '1000000000000000000000', // tokenReserve (1000 DSTK)\r\n    5: '500000', // shareReserve\r\n    6: '100000000000000000000', // lpTokenSupply (100 LP)\r\n    7: '0' // collectedFees\r\n  } : null;\r\n  const sharePrice: any = companyInfo ? '50000000000000000000' : null; // 50 DSTK\r\n  const companyLoading = false;\r\n  const priceLoading = false;\r\n  const companyError = null;\r\n  \r\n  const currentPrice = sharePrice ? parseFloat(sharePrice.toString()) / 1e18 : 0;\r\n\r\n  // Set timeout for data loading\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setDataLoadTimeout(true);\r\n    }, 10000); // 10 second timeout\r\n    \r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  // Reset timeout when data loads\r\n  useEffect(() => {\r\n    if (company) {\r\n      setDataLoadTimeout(false);\r\n    }\r\n  }, [company]);\r\n\r\n  // Show error if company not found\r\n  if (!companyInfo || numericCompanyId === -1) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"text-center max-w-md\">\r\n          <AlertTriangle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">Company Not Found</h2>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n            The company \"{stringCompanyId}\" could not be found in our company directory.\r\n          </p>\r\n          <div className=\"space-y-2\">\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              Available companies: openai, spacex, xai, binance, anthropic\r\n            </p>\r\n            <button\r\n              onClick={() => window.history.back()}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors\"\r\n            >\r\n              Go Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show loading state with timeout handling\r\n  if (companyLoading || (!company && !dataLoadTimeout && !companyError)) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading company data...</p>\r\n          {dataLoadTimeout && (\r\n            <div className=\"mt-4 p-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700 rounded-lg\">\r\n              <div className=\"flex items-center justify-center gap-2 text-yellow-800 dark:text-yellow-200\">\r\n                <AlertTriangle size={20} />\r\n                <span>Loading is taking longer than expected</span>\r\n              </div>\r\n              <p className=\"text-sm text-yellow-700 dark:text-yellow-300 mt-2\">\r\n                Backend services may be starting up or unavailable\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show error state for company data\r\n  if (companyError || (dataLoadTimeout && !company)) {\r\n    const isCompanyInJSON = !!companyInfo;\r\n    const isNotRegistered = isCompanyInJSON && !company && !companyError;\r\n    \r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"text-center max-w-md\">\r\n          <div className=\"mb-4\">\r\n            <AlertTriangle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n              {isNotRegistered ? 'Company Not Registered on Blockchain' : 'Unable to Load Company Data'}\r\n            </h2>\r\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n              {isNotRegistered ? \r\n                `${companyInfo.name} exists in our directory but hasn't been registered on the blockchain yet.` :\r\n                companyError ? \r\n                  'There was an error loading the company data from the blockchain.' :\r\n                  'Company data could not be loaded. Backend services may be unavailable.'\r\n              }\r\n            </p>\r\n            \r\n            {isNotRegistered && (\r\n              <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700 rounded-lg\">\r\n                <p className=\"text-sm text-blue-800 dark:text-blue-200\">\r\n                  To trade this company's shares, it needs to be registered on the blockchain first.\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            {isNotRegistered && (\r\n              <button\r\n                onClick={() => window.location.href = '/register'}\r\n                className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-medium transition-colors mr-2\"\r\n              >\r\n                Register Company\r\n              </button>\r\n            )}\r\n            <button\r\n              onClick={() => window.location.reload()}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors\"\r\n            >\r\n              <RefreshCw className=\"w-4 h-4 inline mr-2\" />\r\n              Retry\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Connection Status Alert */}\r\n      {connectionStatus !== 'connected' && connectionStatus !== 'disabled' && (\r\n        <div className={`rounded-lg border p-4 ${\r\n          connectionStatus === 'error' ? \r\n            'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-700' :\r\n            'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-700'\r\n        }`}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <WifiOff className=\"w-5 h-5 text-red-500\" />\r\n              <div>\r\n                <h4 className={`font-medium ${\r\n                  connectionStatus === 'error' ? \r\n                    'text-red-800 dark:text-red-200' : \r\n                    'text-yellow-800 dark:text-yellow-200'\r\n                }`}>\r\n                  {connectionStatus === 'connecting' && 'Connecting to real-time services...'}\r\n                  {connectionStatus === 'error' && 'Real-time services unavailable'}\r\n                  {connectionStatus === 'disconnected' && 'Disconnected from real-time services'}\r\n                </h4>\r\n                <p className={`text-sm ${\r\n                  connectionStatus === 'error' ? \r\n                    'text-red-700 dark:text-red-300' : \r\n                    'text-yellow-700 dark:text-yellow-300'\r\n                }`}>\r\n                  {error || 'Order book and depth chart may show limited data'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {hasRetryableError && (\r\n              <button\r\n                onClick={reconnect}\r\n                className=\"bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 text-gray-900 dark:text-white px-3 py-1 rounded text-sm font-medium border border-gray-300 dark:border-gray-600 transition-colors\"\r\n              >\r\n                <RefreshCw className=\"w-4 h-4 inline mr-1\" />\r\n                Retry\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Header */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              {companyInfo.name} ({companyInfo.symbol})\r\n            </h1>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n              Company ID: #{numericCompanyId} ({stringCompanyId})\r\n            </p>\r\n          </div>\r\n          <div className=\"text-right\">\r\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              {priceLoading ? (\r\n                <div className=\"animate-pulse bg-gray-200 dark:bg-gray-700 h-8 w-32 rounded\"></div>\r\n              ) : (\r\n                `${currentPrice.toFixed(6)} DSTK`\r\n              )}\r\n            </div>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Current Price\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Trading Interface */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Left Column - Chart and Depth */}\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {/* Trading Chart */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Price Chart</h3>\r\n            </div>\r\n            <div className=\"p-4\">\r\n              <TradingChart symbol={companyInfo.symbol} height={400} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Order Book and Depth Chart with Error Boundaries */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n              <OrderBook companyId={numericCompanyId} height={500} />\r\n            </div>\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n              <DepthChart companyId={numericCompanyId} height={500} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Open Orders */}\r\n          <OpenOrders />\r\n        </div>\r\n\r\n        {/* Right Column - Trading Forms */}\r\n        <div className=\"space-y-6\">\r\n          {/* Tab Navigation */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\r\n              <button\r\n                onClick={() => setActiveTab('trade')}\r\n                className={`flex-1 py-3 px-4 text-sm font-medium transition-colors ${\r\n                  activeTab === 'trade'\r\n                    ? 'border-b-2 border-blue-500 text-blue-600 dark:text-blue-400'\r\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\r\n                }`}\r\n              >\r\n                Trade\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('liquidity')}\r\n                className={`flex-1 py-3 px-4 text-sm font-medium transition-colors ${\r\n                  activeTab === 'liquidity'\r\n                    ? 'border-b-2 border-blue-500 text-blue-600 dark:text-blue-400'\r\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\r\n                }`}\r\n              >\r\n                Liquidity\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Tab Content */}\r\n          {activeTab === 'trade' ? (\r\n            <TradingForm companyId={numericCompanyId} currentPrice={currentPrice} />\r\n          ) : (\r\n            <LiquidityProvider companyId={numericCompanyId} currentPrice={currentPrice} />\r\n          )}\r\n\r\n          {/* Market Info */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Market Info</h3>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Total Supply:</span>\r\n                <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                  {company?.[3]?.toString() || '0'} shares\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Token Reserve:</span>\r\n                <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                  {company?.[4] ? (parseFloat(company[4].toString()) / 1e18).toFixed(4) : '0'} DSTK\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Share Reserve:</span>\r\n                <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                  {company?.[5]?.toString() || '0'} shares\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">LP Token Supply:</span>\r\n                <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                  {company?.[6] ? (parseFloat(company[6].toString()) / 1e18).toFixed(4) : '0'} LP\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Collected Fees:</span>\r\n                <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                  {company?.[7] ? (parseFloat(company[7].toString()) / 1e18).toFixed(4) : '0'} DSTK\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Trading Features */}\r\n          <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-lg border border-blue-200 dark:border-blue-700 p-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">Trading Features</h3>\r\n            <ul className=\"space-y-2 text-sm\">\r\n              <li className=\"flex items-center gap-2 text-gray-700 dark:text-gray-300\">\r\n                <div className={`w-2 h-2 rounded-full ${connectionStatus === 'connected' ? 'bg-green-500' : connectionStatus === 'connecting' ? 'bg-yellow-500' : 'bg-gray-400'}`}></div>\r\n                Real-time order book\r\n              </li>\r\n              <li className=\"flex items-center gap-2 text-gray-700 dark:text-gray-300\">\r\n                <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                Market & limit orders\r\n              </li>\r\n              <li className=\"flex items-center gap-2 text-gray-700 dark:text-gray-300\">\r\n                <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                Liquidity provision\r\n              </li>\r\n              <li className=\"flex items-center gap-2 text-gray-700 dark:text-gray-300\">\r\n                <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                Professional charts\r\n              </li>\r\n              <li className=\"flex items-center gap-2 text-gray-700 dark:text-gray-300\">\r\n                <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                0.25% trading fees\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}